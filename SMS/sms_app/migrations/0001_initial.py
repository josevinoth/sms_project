# Generated by Django 5.1 on 2024-09-26 04:58

import django.contrib.auth.models
import django.db.models.deletion
import sms_app.sub_models.Requirements_mod
import sms_app.sub_models.customer_mod
import sms_app.sub_models.damagereport_mod
import sms_app.sub_models.gatein_mod_pre
import sms_app.sub_models.insurance_info_mod
import sms_app.sub_models.loadingbay_mod
import sms_app.sub_models.pk_needassessment_mod
import sms_app.sub_models.pk_purchaseorder_mod
import sms_app.sub_models.sales_info_mod
import sms_app.sub_models.tripdetail_mod
import sms_app.sub_models.upload_mod
import sms_app.sub_models.vendor_info_mod
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActiveinactiveInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active_inactive', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='applicaiton_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['app_name'],
            },
        ),
        migrations.CreateModel(
            name='AssetInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('asset_number', models.CharField(blank=True, max_length=50, null=True)),
                ('asset_model', models.CharField(max_length=50)),
                ('asset_make', models.CharField(max_length=50)),
                ('asset_serial_num1', models.CharField(default='', max_length=50)),
                ('asset_assignedon', models.CharField(blank=True, max_length=50, null=True)),
                ('asset_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=50)),
                ('asset_order_number', models.CharField(blank=True, max_length=50, null=True)),
                ('asset_purchase_date', models.DateField()),
                ('asset_Id', models.CharField(default='', max_length=50)),
                ('asset_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('asset_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('asset_remarks', models.TextField(blank=True, max_length=300, null=True)),
                ('asset_audit_date', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='assign_status_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('as_stauts', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['as_stauts'],
            },
        ),
        migrations.CreateModel(
            name='AxletypeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('at_axletype', models.CharField(default='', max_length=100, null=True)),
            ],
            options={
                'ordering': ['at_axletype'],
            },
        ),
        migrations.CreateModel(
            name='BodyInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bo_body', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Business_Sol_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bvm_business', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['bvm_business'],
            },
        ),
        migrations.CreateModel(
            name='Business_won_NoInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bw_no_name', models.CharField(default='', max_length=40)),
            ],
            options={
                'ordering': ['bw_no_name'],
            },
        ),
        migrations.CreateModel(
            name='Busnotwon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bus_notwon_reason', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['bus_notwon_reason'],
            },
        ),
        migrations.CreateModel(
            name='Bvmproduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bp_product', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['bp_product'],
            },
        ),
        migrations.CreateModel(
            name='Callnature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('call_nature', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['call_nature'],
            },
        ),
        migrations.CreateModel(
            name='Callpurpose',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('call_purpose', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['call_purpose'],
            },
        ),
        migrations.CreateModel(
            name='Calltype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('call_type', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['call_type'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['category'],
            },
        ),
        migrations.CreateModel(
            name='Check_in_out',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_out_name', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['check_in_out_name'],
            },
        ),
        migrations.CreateModel(
            name='Costtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_type', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['cost_type'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CrcountfromInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cf_crcountfrom', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Currency_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency_type', models.CharField(max_length=50, null=True)),
                ('converision_value', models.FloatField(default=0.0, null=True)),
            ],
            options={
                'ordering': ['currency_type'],
            },
        ),
        migrations.CreateModel(
            name='Cusnewexist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cus_new_exist', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['cus_new_exist'],
            },
        ),
        migrations.CreateModel(
            name='CustomerdepartmentInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ct_customerdepartment', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomernameInfo_new',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cn_customername', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomertypeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cust_customer_type', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DamageInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('damage_name', models.CharField(default='', max_length=20, null=True)),
            ],
            options={
                'ordering': ['damage_name'],
            },
        ),
        migrations.CreateModel(
            name='DamagereportImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('damimage_wh_job_num', models.CharField(default='', max_length=300, null=True)),
                ('dam_OTL_pic', models.ImageField(null=True, upload_to=sms_app.sub_models.damagereport_mod.user_directory_path)),
                ('dam_document', models.FileField(null=True, upload_to=sms_app.sub_models.damagereport_mod.user_directory_path)),
                ('dam_customer_approval', models.FileField(null=True, upload_to=sms_app.sub_models.damagereport_mod.user_directory_path)),
                ('dam_open_door_pic', models.ImageField(null=True, upload_to=sms_app.sub_models.damagereport_mod.user_directory_path)),
                ('dam_50_offload_pic', models.ImageField(null=True, upload_to=sms_app.sub_models.damagereport_mod.user_directory_path)),
                ('dam_empty_vehicle', models.ImageField(null=True, upload_to=sms_app.sub_models.damagereport_mod.user_directory_path)),
                ('dam_closed_door_pic', models.ImageField(null=True, upload_to=sms_app.sub_models.damagereport_mod.user_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='DesignationInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('des_designation_name', models.CharField(default='', max_length=100, null=True)),
            ],
            options={
                'ordering': ['des_designation_name'],
            },
        ),
        migrations.CreateModel(
            name='Enquiry_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enq_enquiry_number', models.CharField(max_length=10)),
                ('enq_customer_name', models.CharField(choices=[('DHL', 'DHL'), ('EXP', 'EXP'), ('OTHERS', 'OTHERS')], default='', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseCategoryInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exp_category_name', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['exp_category_name'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseTypeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exp_type_name', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['exp_type_name'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseUOMInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exp_uom_name', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['exp_uom_name'],
            },
        ),
        migrations.CreateModel(
            name='faciltiyrequirementinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fac_requirement', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['fac_requirement'],
            },
        ),
        migrations.CreateModel(
            name='FueltypeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ft_fueltype', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Fuelvendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_vendor', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['fuel_vendor'],
            },
        ),
        migrations.CreateModel(
            name='Fumigation_ActionInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_taken_by', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['action_taken_by'],
            },
        ),
        migrations.CreateModel(
            name='Gatein_pre_info_att',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gatein_pre_number_att', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('gatein_pre_shipment_att', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.gatein_mod_pre.pre_checkin_directory_path)),
                ('gatein_pre_cust_appr_att', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.gatein_mod_pre.pre_checkin_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='GST_payable_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gst', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['gst'],
            },
        ),
        migrations.CreateModel(
            name='GstexcemptionInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ge_gstexcepmtion', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GstmodelInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gm_gstmodel', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Industrytype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry_type', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['industry_type'],
            },
        ),
        migrations.CreateModel(
            name='Ininspectreport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_pur_order_no', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('in_pur_order_date', models.DateField(blank=True, null=True)),
                ('in_supp_name', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('in_supp_invoice_no', models.CharField(blank=True, max_length=30, null=True)),
                ('in_supp_invoice_date', models.DateField(blank=True, null=True)),
                ('in_trans_name', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('in_vehicle_no', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('in_driver_name', models.CharField(blank=True, max_length=30, null=True)),
                ('in_driver_mob_no', models.IntegerField(blank=True, default=0, null=True)),
                ('in_grn_no', models.CharField(blank=True, max_length=30, null=True)),
                ('in_length', models.FloatField(blank=True, default=0.0, null=True)),
                ('in_width', models.FloatField(blank=True, default=0.0, null=True)),
                ('in_thickness', models.FloatField(blank=True, default=0.0, null=True)),
                ('in_kg_mtr', models.FloatField(blank=True, default=0.0, null=True)),
                ('in_check_mtd', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('in_rec_qty', models.IntegerField(blank=True, default=0, null=True)),
                ('in_rej_qty', models.IntegerField(blank=True, default=0, null=True)),
                ('in_acc_qty', models.IntegerField(blank=True, default=0, null=True)),
                ('in_remark', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('in_check_by', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('in_inspec_by', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('in_appr_by', models.CharField(blank=True, default='', max_length=10, null=True)),
            ],
            options={
                'ordering': ['in_pur_order_no'],
            },
        ),
        migrations.CreateModel(
            name='Insurance_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_name', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Labels_pasted_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lp_name', models.CharField(blank=True, default='', max_length=20, null=True)),
            ],
            options={
                'ordering': ['lp_name'],
            },
        ),
        migrations.CreateModel(
            name='Loadingbayimages_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lbimg_job_no', models.CharField(default='', max_length=300, null=True)),
                ('lbimg_inward_pod', models.FileField(null=True, upload_to=sms_app.sub_models.loadingbay_mod.loadingbay_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='manpowerrequirementinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manpow_requirement', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['manpow_requirement'],
            },
        ),
        migrations.CreateModel(
            name='Materialhandling_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('MH_name', models.CharField(default='', max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Materialstock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ms_description', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('ms_quantity', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('ms_size', models.CharField(blank=True, default='', max_length=100, null=True)),
            ],
            options={
                'ordering': ['ms_description'],
            },
        ),
        migrations.CreateModel(
            name='ml_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='MovementtypeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mt_movementtype', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Nabvmcustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bvm_customer', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['bvm_customer'],
            },
        ),
        migrations.CreateModel(
            name='Naconsumables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consumables', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['consumables'],
            },
        ),
        migrations.CreateModel(
            name='Nadeliverytype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_type', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['delivery_type'],
            },
        ),
        migrations.CreateModel(
            name='Nadimensiontype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dimension_type', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['dimension_type'],
            },
        ),
        migrations.CreateModel(
            name='Naitemname',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['item_name'],
            },
        ),
        migrations.CreateModel(
            name='Napackingfield',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('packing_field', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['packing_field'],
            },
        ),
        migrations.CreateModel(
            name='Naplywoodthickness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plywood_thickness', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['plywood_thickness'],
            },
        ),
        migrations.CreateModel(
            name='Naspecialrequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('special_requirements', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['special_requirements'],
            },
        ),
        migrations.CreateModel(
            name='Natypeofaccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_access', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['type_of_access'],
            },
        ),
        migrations.CreateModel(
            name='Natypeofpack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_pack', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['type_of_pack'],
            },
        ),
        migrations.CreateModel(
            name='Natypeofplywood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_plywood', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['type_of_plywood'],
            },
        ),
        migrations.CreateModel(
            name='Natypeofreq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_req', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['type_of_req'],
            },
        ),
        migrations.CreateModel(
            name='Natypeofwood',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_wood', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['type_of_wood'],
            },
        ),
        migrations.CreateModel(
            name='Natypeofwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_work', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['type_of_work'],
            },
        ),
        migrations.CreateModel(
            name='Nawoodnorms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wood_norms', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['wood_norms'],
            },
        ),
        migrations.CreateModel(
            name='Nawoodtreatmentreq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wood_treatment_req', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['wood_treatment_req'],
            },
        ),
        migrations.CreateModel(
            name='Ouinspectreport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ou_pur_order_no', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('ou_pur_order_date', models.DateField(blank=True, null=True)),
                ('ou_cus_name', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('ou_invoice_no', models.CharField(blank=True, max_length=30, null=True)),
                ('ou_invoice_date', models.DateField(blank=True, null=True)),
                ('ou_trans_name', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('ou_vehicle_no', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('ou_driver_name', models.CharField(blank=True, max_length=30, null=True)),
                ('ou_driver_mob_no', models.IntegerField(blank=True, default=0, null=True)),
                ('ou_length', models.FloatField(blank=True, default=0.0, null=True)),
                ('ou_width', models.FloatField(blank=True, default=0.0, null=True)),
                ('ou_thickness', models.FloatField(blank=True, default=0.0, null=True)),
                ('ou_kg_mtr', models.FloatField(blank=True, default=0.0, null=True)),
                ('ou_check_mtd', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('ou_rej_qty', models.IntegerField(blank=True, default=0, null=True)),
                ('ou_acc_qty', models.IntegerField(blank=True, default=0, null=True)),
                ('ou_remark', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('ou_check_by', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('ou_inspec_by', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('ou_appr_by', models.CharField(blank=True, default='', max_length=10, null=True)),
            ],
            options={
                'ordering': ['ou_pur_order_no'],
            },
        ),
        migrations.CreateModel(
            name='OwnershipInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ow_ownership', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Packagetype_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_type', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Packingjobs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pj_s_no', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('pj_date', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('pj_job_no', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('pj_customer', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('pj_pack_type', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('pj_no_box', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('pj_reference', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('pj_bill_amount', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('pj_expense', models.CharField(blank=True, default='', max_length=100, null=True)),
            ],
            options={
                'ordering': ['pj_s_no'],
            },
        ),
        migrations.CreateModel(
            name='Packreuqirementinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pack_requirement', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['pack_requirement'],
            },
        ),
        migrations.CreateModel(
            name='PaymentcycleInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_cycle', models.CharField(default='', max_length=80)),
            ],
            options={
                'ordering': ['payment_cycle'],
            },
        ),
        migrations.CreateModel(
            name='PaymenttypeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pa_paymenttype', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Peo_reg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('peo_name', models.CharField(default='', max_length=100)),
                ('peo_age', models.IntegerField(default='')),
                ('peo_mob', models.IntegerField(default='')),
                ('peo_address', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PermittypeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pt_permittype', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='pk_itemInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['item_name'],
            },
        ),
        migrations.CreateModel(
            name='pk_stock_statusinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['status_name'],
            },
        ),
        migrations.CreateModel(
            name='Pkstockpurchasetype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pk_stockpurchasetype', models.CharField(max_length=50, null=True)),
            ],
            options={
                'ordering': ['pk_stockpurchasetype'],
            },
        ),
        migrations.CreateModel(
            name='Pkstocktype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pk_stocktype', models.CharField(max_length=50, null=True)),
            ],
            options={
                'ordering': ['pk_stocktype'],
            },
        ),
        migrations.CreateModel(
            name='Prespectivec_customer_NoInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pc_no_name', models.CharField(default='', max_length=50)),
            ],
            options={
                'ordering': ['pc_no_name'],
            },
        ),
        migrations.CreateModel(
            name='Prod_Cat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prod_cat_title', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Prod_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prod_type_title', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Received_not',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('received_not_name', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['received_not_name'],
            },
        ),
        migrations.CreateModel(
            name='Reqbugimprove',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rq_bugimprove', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['rq_bugimprove'],
            },
        ),
        migrations.CreateModel(
            name='Reqmodule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rq_module', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['rq_module'],
            },
        ),
        migrations.CreateModel(
            name='RoleInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(default='', max_length=100, null=True)),
            ],
            options={
                'ordering': ['role_name'],
            },
        ),
        migrations.CreateModel(
            name='Salestatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['status'],
            },
        ),
        migrations.CreateModel(
            name='SealedoropenedInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sealed_open', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='servicetype_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serv_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['source'],
            },
        ),
        migrations.CreateModel(
            name='StackingInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stack_layer', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['stack_layer'],
            },
        ),
        migrations.CreateModel(
            name='StatusList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_title', models.CharField(max_length=100, null=True)),
            ],
            options={
                'ordering': ['status_title'],
            },
        ),
        migrations.CreateModel(
            name='Stock_movement_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_mov_type', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stock_report_combo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('WH_Job_Number', models.CharField(default='', max_length=100)),
                ('Stock_number', models.CharField(default='', max_length=100)),
                ('Customer', models.CharField(default='', max_length=100)),
                ('Arrival_Date', models.CharField(default='', max_length=100)),
                ('Loading_Time', models.CharField(default='', max_length=100)),
                ('Unloading_Time', models.CharField(default='', max_length=100)),
                ('Transporter', models.CharField(default='', max_length=100)),
                ('Truck_Number', models.CharField(default='', max_length=100)),
                ('Consignee', models.CharField(default='', max_length=100)),
                ('Consigner', models.CharField(default='', max_length=100)),
                ('DOCS_Received', models.CharField(default='', max_length=100)),
                ('HAWB', models.CharField(default='', max_length=100)),
                ('Destination', models.CharField(default='', max_length=100)),
                ('Customer_Invoice', models.CharField(default='', max_length=100)),
                ('Checkin_Weight', models.CharField(default='', max_length=100)),
                ('Checkin_Qty', models.CharField(default='', max_length=100)),
                ('Package_Type', models.CharField(default='', max_length=100)),
                ('Invoice_Weight', models.CharField(default='', max_length=100)),
                ('Invoice_Qty', models.CharField(default='', max_length=100)),
                ('Length', models.CharField(default='', max_length=100)),
                ('Width', models.CharField(default='', max_length=100)),
                ('Height', models.CharField(default='', max_length=100)),
                ('Volume_Weight', models.CharField(default='', max_length=100)),
                ('CBM', models.CharField(default='', max_length=100)),
                ('Currency_Type', models.CharField(default='', max_length=100)),
                ('Invoice_Value', models.CharField(default='', max_length=100)),
                ('Invoice_Value_INR', models.CharField(default='', max_length=100)),
                ('E_Way_Bill', models.CharField(default='', max_length=100)),
                ('Fumigation_Date', models.CharField(default='', max_length=100)),
                ('Branch', models.CharField(default='', max_length=100)),
                ('Unit', models.CharField(default='', max_length=100)),
                ('bay', models.CharField(default='', max_length=100)),
                ('Checked_In_Out', models.CharField(default='', max_length=100)),
                ('Storage_Days', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['WH_Job_Number'],
            },
        ),
        migrations.CreateModel(
            name='Stock_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_type', models.CharField(max_length=50, null=True)),
            ],
            options={
                'ordering': ['stock_type'],
            },
        ),
        migrations.CreateModel(
            name='Stud_reg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stud_name', models.CharField(default='', max_length=100)),
                ('stud_age', models.IntegerField(default='')),
                ('stud_eng', models.IntegerField(default='')),
                ('stud_tamil', models.IntegerField(default='')),
                ('stud_math', models.IntegerField(default='')),
                ('stud_social', models.IntegerField(default='')),
                ('stud_science', models.IntegerField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Supplyinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supply_type', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['supply_type'],
            },
        ),
        migrations.CreateModel(
            name='TestInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_num', models.CharField(default='', max_length=100)),
                ('date_of_arrival', models.DateTimeField(blank=True, null=True)),
                ('unloading_start_time', models.DateTimeField(blank=True, null=True)),
                ('unloading_end_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['stock_num'],
            },
        ),
        migrations.CreateModel(
            name='Tr_businesstype_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tr_business', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['tr_business'],
            },
        ),
        migrations.CreateModel(
            name='Tr_triptype_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tr_trip_type', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['tr_trip_type'],
            },
        ),
        migrations.CreateModel(
            name='Transrequirementinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trans_requirement', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['trans_requirement'],
            },
        ),
        migrations.CreateModel(
            name='TrbusinesstypeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tb_trbusinesstype', models.CharField(default='', max_length=100, null=True)),
            ],
            options={
                'ordering': ['tb_trbusinesstype'],
            },
        ),
        migrations.CreateModel(
            name='Trip_category_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['category'],
            },
        ),
        migrations.CreateModel(
            name='Trip_closure_files_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tcf_tripnumber', models.CharField(blank=True, max_length=300, null=True)),
                ('tcf_trip_cost', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.tripdetail_mod.trip_closure_directory_path)),
                ('tcf_parking_cost', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.tripdetail_mod.trip_closure_directory_path)),
                ('tcf_toll_cost', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.tripdetail_mod.trip_closure_directory_path)),
                ('tcf_loading_cost', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.tripdetail_mod.trip_closure_directory_path)),
                ('tcf_unloading_cost', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.tripdetail_mod.trip_closure_directory_path)),
                ('tcf_weighment_cost', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.tripdetail_mod.trip_closure_directory_path)),
                ('tcf_handling_cost', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.tripdetail_mod.trip_closure_directory_path)),
                ('tcf_pod', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.tripdetail_mod.trip_closure_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='Tripstatusinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['status'],
            },
        ),
        migrations.CreateModel(
            name='TypeofotlInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_otl', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unitofmeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_of_measure', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['unit_of_measure'],
            },
        ),
        migrations.CreateModel(
            name='UOM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uom_name', models.CharField(default='', max_length=100)),
            ],
            options={
                'ordering': ['uom_name'],
            },
        ),
        migrations.CreateModel(
            name='UploadInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_upload_nam', models.FileField(upload_to=sms_app.sub_models.upload_mod.user_directory_path)),
                ('image_upload_nam', models.ImageField(upload_to=sms_app.sub_models.upload_mod.user_directory_path)),
                ('upload_description', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehiclecategoryInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vc_vehiclecategory', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehiclecolourInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vh_vehiclecolour', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehiclemodelInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vl_vehiclemodel', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VehicletypeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vt_vehicletype', models.CharField(default='', max_length=100, null=True)),
            ],
            options={
                'ordering': ['vt_vehicletype'],
            },
        ),
        migrations.CreateModel(
            name='VhmanufacturerInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vr_vhmanufacturer', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Wh_chargetype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charge_Type', models.CharField(default='', max_length=100, null=True)),
            ],
            options={
                'ordering': ['charge_Type'],
            },
        ),
        migrations.CreateModel(
            name='Whrequirementinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wh_requirement', models.CharField(default='', max_length=30)),
            ],
            options={
                'ordering': ['wh_requirement'],
            },
        ),
        migrations.CreateModel(
            name='WhstoragetypeInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Whstoragetype_name', models.CharField(default='', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='YesNoInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yesno_name', models.CharField(default='', max_length=10)),
            ],
            options={
                'ordering': ['yesno_name'],
            },
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
            ],
            options={
                'ordering': ['first_name'],
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Assign_asset_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AA_assingedto', models.CharField(blank=True, max_length=20, null=True)),
                ('AA_assignedon', models.CharField(blank=True, max_length=20, null=True)),
                ('AA_assignedby', models.CharField(blank=True, max_length=20, null=True)),
                ('AA_remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('AA_asset_number', models.ForeignKey(blank=True, max_length=20, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.assetinfo')),
            ],
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='asset_assign_status',
            field=models.ForeignKey(blank=True, db_column='asset_assign_status', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_assign_status', to='sms_app.assign_status_info'),
        ),
        migrations.CreateModel(
            name='Costdescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_description', models.CharField(default='', max_length=100)),
                ('cost_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.costtype')),
            ],
            options={
                'ordering': ['cost_description'],
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(default='', max_length=100)),
                ('country', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.country')),
            ],
            options={
                'ordering': ['city_name'],
            },
        ),
        migrations.CreateModel(
            name='CustomerInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cu_customercode', models.CharField(default='', max_length=100)),
                ('cu_name', models.CharField(default='', max_length=100)),
                ('cu_address', models.TextField(default='', max_length=500)),
                ('cu_nameshort', models.CharField(default='', max_length=100)),
                ('cu_pan', models.CharField(default='', max_length=10)),
                ('cu_gst', models.CharField(default='', max_length=30)),
                ('cu_customerperson', models.CharField(default='', max_length=100)),
                ('cu_designation', models.CharField(default='', max_length=100)),
                ('cu_contactno', models.CharField(default='', max_length=10, null=True)),
                ('cu_email', models.EmailField(default='', max_length=50)),
                ('cu_gstpercentage', models.FloatField(default=0.0)),
                ('cu_creditdays', models.IntegerField(default=0)),
                ('cu_tallyid', models.CharField(max_length=100, null=True)),
                ('cu_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('cu_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('cu_contract_validity_from', models.DateTimeField(blank=True, null=True)),
                ('cu_contract_validity_to', models.DateTimeField(blank=True, null=True)),
                ('cu_contract', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.customer_mod.customercontractinfo_directory_path)),
                ('cu_business_sol', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.business_sol_info')),
                ('cu_creditcountfrom', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.crcountfrominfo')),
                ('cu_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.customertypeinfo')),
                ('cu_gstexcepmtion', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.gstexcemptioninfo')),
                ('cu_gstmodel', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.gstmodelinfo')),
                ('cu_industry_type', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.industrytype')),
                ('cu_paymentcycle', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.paymentcycleinfo')),
                ('cu_paymenttype', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.paymenttypeinfo')),
                ('cu_businessmodel', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.trbusinesstypeinfo')),
                ('cu_lastmodifiedby', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
            ],
            options={
                'ordering': ['cu_name'],
            },
        ),
        migrations.CreateModel(
            name='BilingInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_invoice_ref', models.CharField(max_length=30)),
                ('bill_invoice_date', models.DateField()),
                ('bill_customer_GST', models.CharField(blank=True, default='', max_length=80, null=True)),
                ('bill_customer_code', models.CharField(blank=True, default='', max_length=60, null=True)),
                ('bill_customer_address', models.TextField(blank=True, default='', max_length=200, null=True)),
                ('bill_customer_short_name', models.CharField(blank=True, default='', max_length=60, null=True)),
                ('bill_customer_contact', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('bill_customer_person', models.CharField(blank=True, default='', max_length=200, null=True)),
                ('bill_e_invoice', models.CharField(blank=True, default='', max_length=60, null=True)),
                ('bill_weight', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_start_date', models.DateField(blank=True, null=True)),
                ('bill_end_date', models.DateField(blank=True, null=True)),
                ('bill_no_of_days', models.IntegerField(blank=True, default=0.0, null=True)),
                ('bill_per_day_wh_charges', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_wh_storage_charges', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_no_of_pallets', models.IntegerField(blank=True, default=0, null=True)),
                ('bill_rate_per_pallet', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_loading_charge', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_unloading_charge', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_crane_hrs_1', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_crane_hrs_2', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_forklift_hrs_1', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_forklift_hrs_2', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_tot_crane_time', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_tot_forklift_time', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_tot_crane_charges', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_tot_forklift_charges', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_tot_fumigation_charges', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_total_pre_gst', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_cgst', models.FloatField(blank=True, default=9.0, null=True)),
                ('bill_sgst', models.FloatField(blank=True, default=9.0, null=True)),
                ('bill_total_post_gst', models.FloatField(blank=True, default=0.0, null=True)),
                ('bill_created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('bill_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('bill_customer_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerinfo')),
                ('bill_status', models.ForeignKey(default=6, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.statuslist')),
                ('bill_customer_type', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.trbusinesstypeinfo')),
                ('bill_sale_person', models.ForeignKey(blank=True, db_column='bill_sale_person', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bill_sale_person', to='sms_app.myuser')),
                ('bill_updated_by', models.ForeignKey(db_column='bill_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bill_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['-bill_invoice_ref'],
            },
        ),
        migrations.CreateModel(
            name='Department_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept_name', models.CharField(max_length=100)),
                ('dept_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.activeinactiveinfo')),
            ],
            options={
                'ordering': ['dept_name'],
            },
        ),
        migrations.CreateModel(
            name='Bunkname',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bunk_name', models.CharField(default='', max_length=30)),
                ('bunk_address', models.TextField(default='', max_length=100)),
                ('bunk_fuel_vendor', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.fuelvendor')),
            ],
            options={
                'ordering': ['bunk_name'],
            },
        ),
        migrations.CreateModel(
            name='Insurance_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ins_name', models.CharField(max_length=40)),
                ('ins_policy_no', models.CharField(default='', max_length=40)),
                ('ins_vehicle_no', models.CharField(default='', max_length=40)),
                ('ins_sum_assured', models.FloatField(default='0.0')),
                ('ins_premium_amount', models.FloatField(default='0.0')),
                ('ins_start_date', models.DateField()),
                ('ins_expiry_date', models.DateField()),
                ('ins_validity_remaining', models.IntegerField(default='0')),
                ('ins_units', models.IntegerField(default='0')),
                ('ins_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('ins_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('ins_remarks', models.TextField(blank=True, null=True)),
                ('ins_attachment', models.FileField(null=True, upload_to=sms_app.sub_models.insurance_info_mod.insurance_directory_path)),
                ('ins_status', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.activeinactiveinfo')),
                ('ins_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.insurance_type')),
            ],
            options={
                'ordering': ['ins_name'],
            },
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='asset_insurance_details',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.insurance_info'),
        ),
        migrations.CreateModel(
            name='iou_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('staff_name', models.CharField(max_length=255)),
                ('transaction_date', models.DateField()),
                ('amount', models.FloatField(default=0.0)),
                ('iou_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('iou_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('iou_number', models.CharField(blank=True, max_length=20, null=True)),
                ('business_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.business_sol_info')),
                ('staff_id', models.ForeignKey(db_column='staff_id', on_delete=django.db.models.deletion.CASCADE, related_name='staff_id', to=settings.AUTH_USER_MODEL, to_field='username')),
                ('transaction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.expensecategoryinfo')),
                ('iou_updated_by', models.ForeignKey(blank=True, db_column='iou_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='iou_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['iou_number'],
            },
        ),
        migrations.CreateModel(
            name='Location_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loc_name', models.CharField(max_length=100)),
                ('loc_zipcode', models.CharField(max_length=10)),
                ('loc_address', models.CharField(max_length=300)),
                ('loc_city', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.city')),
                ('loc_country', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.country')),
                ('loc_status', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.activeinactiveinfo')),
            ],
            options={
                'ordering': ['loc_name'],
            },
        ),
        migrations.AddField(
            model_name='insurance_info',
            name='ins_branch',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.location_info'),
        ),
        migrations.CreateModel(
            name='Gatein_pre_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gatein_pre_number', models.CharField(blank=True, max_length=100, null=True)),
                ('gatein_pre_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('gatein_pre_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('gatein_pre_shipment_att', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.gatein_mod_pre.pre_checkin_directory_path)),
                ('gatein_pre_cust_appr_att', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.gatein_mod_pre.pre_checkin_directory_path)),
                ('gatein_pre_truck_number', models.CharField(blank=True, max_length=10000, null=True)),
                ('gatein_pre_driver_name', models.CharField(blank=True, max_length=10000, null=True)),
                ('gatein_pre_branch', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.location_info')),
                ('gatein_pre_status', models.ForeignKey(default=6, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.statuslist')),
                ('gatein_pre_updated_by', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='BayInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bay_bayname', models.CharField(default='', max_length=100)),
                ('bay_branch_name', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.location_info')),
            ],
            options={
                'ordering': ['bay_bayname'],
            },
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='asset_location',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.location_info'),
        ),
        migrations.CreateModel(
            name='pk_itemdescriptionInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_item_description', models.CharField(default='', max_length=100)),
                ('id_item_name', models.ForeignKey(db_column='id_item_name', on_delete=django.db.models.deletion.CASCADE, related_name='id_item_name', to='sms_app.pk_iteminfo')),
            ],
            options={
                'ordering': ['id_item_description'],
            },
        ),
        migrations.CreateModel(
            name='PkneedassessmentInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('na_assessment_num', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('na_date', models.DateField(blank=True, null=True)),
                ('na_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('na_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('na_attach', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.pk_needassessment_mod.Pkneedassessment_directory_path)),
                ('na_others_type_pack', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('na_delivery_location', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('na_customer_name', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerinfo')),
                ('na_delivery_by', models.ForeignKey(blank=True, db_column='na_delivery_by', default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='na_delivery_by', to='sms_app.nabvmcustomer')),
                ('na_delivery_type', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.nadeliverytype')),
                ('na_packing_field', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.napackingfield')),
                ('na_special_requirements', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.naspecialrequirements')),
                ('na_type_of_access', models.ManyToManyField(to='sms_app.natypeofaccess')),
                ('na_type_of_pack', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.natypeofpack')),
                ('na_type_of_work', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.natypeofwork')),
                ('na_unloading', models.ForeignKey(db_column='na_unloading', default='', on_delete=django.db.models.deletion.CASCADE, related_name='na_unloading', to='sms_app.nabvmcustomer')),
                ('na_wood_norms', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.nawoodnorms')),
                ('na_wood_treatment_req', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.nawoodtreatmentreq')),
                ('na_status', models.ForeignKey(blank=True, default=6, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.statuslist')),
            ],
            options={
                'ordering': ['na_assessment_num'],
            },
        ),
        migrations.CreateModel(
            name='PkquotationsummaryInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qs_wood_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_engineer_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_labour_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_margin', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_total_cost_wm', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_rate_per_cft', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_created_at', models.DateField(auto_now_add=True, null=True)),
                ('qs_updated_at', models.DateField(auto_now=True, null=True)),
                ('qs_total_cft', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_crane_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_ht_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_management_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_material_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_transport_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_total_cost_wom', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_address', models.TextField(blank=True, null=True)),
                ('qs_cost_includes', models.TextField(blank=True, null=True)),
                ('qs_notes', models.TextField(blank=True, null=True)),
                ('qs_terms_condition', models.TextField(blank=True, null=True)),
                ('qs_client_scope', models.TextField(blank=True, null=True)),
                ('qs_bvm_scope', models.TextField(blank=True, null=True)),
                ('qs_quotation_number', models.CharField(blank=True, max_length=100, null=True)),
                ('qs_gst', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_final_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('qs_assessment_num', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkneedassessmentinfo')),
                ('qs_customer_name_2', models.ForeignKey(blank=True, db_column='qs_customer_name_2', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qs_customer_name_2', to='sms_app.customerinfo')),
                ('qs_status', models.ForeignKey(blank=True, db_column='qs_status', default=6, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qs_status', to='sms_app.statuslist')),
                ('qs_updated_by', models.ForeignKey(db_column='qs_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qs_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PkpurchaseorderInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_num', models.CharField(max_length=100)),
                ('po_date', models.DateTimeField(blank=True, null=True)),
                ('po_value', models.FloatField(blank=True, default=0.0, null=True)),
                ('po_tax', models.FloatField(blank=True, default=0.0, null=True)),
                ('po_total_value', models.FloatField(blank=True, default=0.0, null=True)),
                ('po_validity_date', models.DateField(blank=True, null=True)),
                ('po_payment_terms', models.CharField(blank=True, max_length=30, null=True)),
                ('po_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('po_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('po_attach', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.pk_purchaseorder_mod.Pkpurchaseorder_directory_path)),
                ('po_comments_box', models.TextField(default='')),
                ('po_assessment_num', models.ForeignKey(blank=True, db_column='po_assessment_num', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='po_assessment_num', to='sms_app.pkneedassessmentinfo')),
                ('po_customer_name', models.ForeignKey(blank=True, db_column='po_customer_name', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='po_customer_name', to='sms_app.customerinfo')),
                ('po_quotation_num', models.ForeignKey(db_column='po_quotation_num', on_delete=django.db.models.deletion.CASCADE, related_name='po_quotation_num', to='sms_app.pkquotationsummaryinfo')),
                ('po_status', models.ForeignKey(blank=True, db_column='po_status', default=6, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='po_status', to='sms_app.statuslist')),
                ('po_updated_by', models.ForeignKey(db_column='po_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='po_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['po_num'],
            },
        ),
        migrations.CreateModel(
            name='Places',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_name', models.CharField(default='', max_length=100)),
                ('city', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.city')),
            ],
            options={
                'ordering': ['place_name'],
            },
        ),
        migrations.CreateModel(
            name='Pregateintruckinfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pregatein_transporter', models.CharField(max_length=1000)),
                ('pregatein_truck_number', models.CharField(max_length=200)),
                ('pregatein_driver', models.CharField(max_length=500)),
                ('pregatein_contact_number', models.CharField(blank=True, max_length=500, null=True)),
                ('pregatein_dl_number', models.CharField(blank=True, max_length=500, null=True)),
                ('pregatein_dl_exp_date', models.DateField(blank=True, null=True)),
                ('pregatein_arrival_date_time', models.DateTimeField(blank=True, null=True)),
                ('pregatein_dock_in_date_time', models.DateTimeField(blank=True, null=True)),
                ('pregatein_otl', models.CharField(max_length=500)),
                ('pregatein_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('pregatein_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('pregatein_qty', models.IntegerField(default=0)),
                ('pregatein_number', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.gatein_pre_info')),
                ('pregatein_offload_acceptance', models.ForeignKey(db_column='pregatein_offload_acceptance', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='pregatein_offload_acceptance', to='sms_app.gstexcemptioninfo')),
                ('pregatein_otl_check', models.ForeignKey(db_column='pregatein_otl_check', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='pregatein_otl_check', to='sms_app.gstexcemptioninfo')),
                ('pregatein_otl_type', models.ForeignKey(db_column='pregatein_otl_type', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='pregatein_otl_type', to='sms_app.typeofotlinfo')),
                ('pregatein_truck_type', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehicletypeinfo')),
                ('pregatein_updated_by', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
            ],
            options={
                'ordering': ['pregatein_truck_number'],
            },
        ),
        migrations.CreateModel(
            name='Gatein_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gatein_job_no', models.CharField(blank=True, max_length=200, null=True)),
                ('gatein_invoice', models.CharField(max_length=400)),
                ('gatein_arrival_date', models.DateTimeField(blank=True, null=True)),
                ('gatein_shipper', models.CharField(blank=True, max_length=200, null=True)),
                ('gatein_consignee', models.CharField(blank=True, max_length=200, null=True)),
                ('gatein_no_of_pkg', models.IntegerField(blank=True, null=True)),
                ('gatein_weight', models.FloatField(blank=True, null=True)),
                ('gatein_actual_weight', models.FloatField(blank=True, null=True)),
                ('gatein_actual_count', models.IntegerField(blank=True, default=0, null=True)),
                ('gatein_driver', models.CharField(blank=True, max_length=2000, null=True)),
                ('gatein_contact_number', models.CharField(blank=True, max_length=2000, null=True)),
                ('gatein_dl_number', models.CharField(blank=True, max_length=2000, null=True)),
                ('gatein_otl', models.CharField(blank=True, max_length=2000, null=True)),
                ('gatein_transporter', models.CharField(blank=True, max_length=2000, null=True)),
                ('gatein_truck_number', models.CharField(blank=True, max_length=2000, null=True)),
                ('gatein_truck_type', models.CharField(blank=True, max_length=2000, null=True)),
                ('gatein_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('gatein_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('gatein_po_num', models.CharField(blank=True, max_length=500, null=True)),
                ('gatein_destination', models.CharField(blank=True, max_length=100, null=True)),
                ('gatein_hawb', models.CharField(blank=True, max_length=100, null=True)),
                ('gatein_email_count', models.IntegerField(blank=True, default=0, null=True)),
                ('gatein_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerinfo')),
                ('gatein_department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerdepartmentinfo')),
                ('gatein_pre_id', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.gatein_pre_info')),
                ('gatein_job_status', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='sms_app.gstexcemptioninfo')),
                ('gatein_truck_number_n', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.pregateintruckinfo')),
                ('gatein_status', models.ForeignKey(default=6, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.statuslist')),
                ('gatein_comodity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.stock_type')),
                ('gatein_customer_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.trbusinesstypeinfo')),
                ('gatein_updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
            ],
            options={
                'ordering': ['gatein_job_no'],
            },
        ),
        migrations.CreateModel(
            name='Product_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prod_name', models.CharField(max_length=100)),
                ('prod_description', models.CharField(default='', max_length=50)),
                ('prod_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.prod_type')),
            ],
        ),
        migrations.CreateModel(
            name='ml_Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('categories', models.ManyToManyField(to='sms_app.product_info')),
            ],
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='asset_product',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.product_info'),
        ),
        migrations.CreateModel(
            name='SalesInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_customer_new_name', models.CharField(blank=True, max_length=500, null=True)),
                ('s_manpower_requirement', models.CharField(blank=True, max_length=30, null=True)),
                ('s_Person_name', models.CharField(max_length=100)),
                ('s_department', models.CharField(max_length=50)),
                ('s_designation', models.CharField(max_length=50)),
                ('s_contact_no', models.CharField(max_length=10)),
                ('s_email_id', models.EmailField(default='', max_length=100)),
                ('s_name_dm', models.CharField(max_length=100)),
                ('s_designation_dm', models.CharField(default='', max_length=100)),
                ('s_emailid_dm', models.EmailField(default='', max_length=100)),
                ('s_vol_customer', models.CharField(blank=True, max_length=30, null=True)),
                ('s_bus_customer', models.CharField(blank=True, max_length=30, null=True)),
                ('s_yesdate_quote', models.DateField(blank=True, null=True)),
                ('s_quote_ref', models.CharField(blank=True, max_length=50, null=True)),
                ('s_yesdate_business', models.DateField(blank=True, null=True)),
                ('s_expected_prof', models.FloatField(blank=True, default=0.0, null=True)),
                ('s_next_meet_schd_date', models.DateField(blank=True, null=True)),
                ('s_credit_period', models.IntegerField(blank=True, null=True)),
                ('s_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('s_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('s_business_start_days', models.IntegerField(blank=True, default=0, null=True)),
                ('s_sale_number', models.CharField(blank=True, max_length=30, null=True)),
                ('s_attachment', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.sales_info_mod.sales_directory_path)),
                ('s_expected_revenue', models.FloatField(blank=True, default=0.0, null=True)),
                ('s_not_competitive_remarks', models.TextField(default='NA')),
                ('s_remarks', models.TextField(default='')),
                ('s_rate_approval_customer', models.CharField(blank=True, max_length=50, null=True)),
                ('s_customer_code', models.CharField(blank=True, max_length=30, null=True)),
                ('s_wh_volume', models.CharField(blank=True, max_length=30, null=True)),
                ('s_wh_business', models.CharField(blank=True, max_length=30, null=True)),
                ('s_tr_volume', models.CharField(blank=True, max_length=30, null=True)),
                ('s_tr_business', models.CharField(blank=True, max_length=30, null=True)),
                ('s_pr_volume', models.CharField(blank=True, max_length=30, null=True)),
                ('s_pr_business', models.CharField(blank=True, max_length=30, null=True)),
                ('s_fmr_volume', models.CharField(blank=True, max_length=30, null=True)),
                ('s_fmr_business', models.CharField(blank=True, max_length=30, null=True)),
                ('s_or_volume', models.CharField(blank=True, max_length=30, null=True)),
                ('s_or_business', models.CharField(blank=True, max_length=30, null=True)),
                ('s_company', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='sms_app.business_sol_info')),
                ('s_customer_name', models.ForeignKey(blank=True, db_column='s_customer_name', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_customer_name', to='sms_app.customerinfo')),
                ('s_customer_new', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='sms_app.cusnewexist')),
                ('s_customer_type', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.customertypeinfo')),
                ('s_fac_mgmt_requirement', models.ForeignKey(blank=True, db_column='s_fac_mgmt_requirement', default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_fac_mgmt_requirement', to='sms_app.faciltiyrequirementinfo')),
                ('s_industry_type', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.industrytype')),
                ('s_location', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.location_info')),
                ('s_noreason_cp', models.ForeignKey(blank=True, default=4, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.prespectivec_customer_noinfo')),
                ('s_not_reason', models.ForeignKey(blank=True, default=4, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.business_won_noinfo')),
                ('s_pack_requirement', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.packreuqirementinfo')),
                ('s_payment_cycle', models.ForeignKey(db_column='s_payment_cycle', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='s_payment_cycle', to='sms_app.paymentcycleinfo')),
                ('s_status', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.salestatus')),
                ('s_supply_type', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.supplyinfo')),
                ('s_trans_requirement', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.transrequirementinfo')),
                ('s_wh_requirement', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.whrequirementinfo')),
                ('s_billing_sop', models.ForeignKey(blank=True, db_column='billing_sop', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='billing_sop', to='sms_app.yesnoinfo')),
                ('s_bus_won_not', models.ForeignKey(blank=True, db_column='s_bus_won_not', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_bus_won_not', to='sms_app.yesnoinfo')),
                ('s_contract', models.ForeignKey(blank=True, db_column='s_contract', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_contract', to='sms_app.yesnoinfo')),
                ('s_customer_prospective', models.ForeignKey(blank=True, db_column='s_customer_prospective', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_customer_prospective', to='sms_app.yesnoinfo')),
                ('s_decision_maker', models.ForeignKey(db_column='s_decision_maker', default='', on_delete=django.db.models.deletion.CASCADE, related_name='s_decision_maker', to='sms_app.yesnoinfo')),
                ('s_kyc', models.ForeignKey(blank=True, db_column='s_kyc', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_kyc', to='sms_app.yesnoinfo')),
                ('s_ops_sop', models.ForeignKey(blank=True, db_column='s_ops_sop', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_ops_sop', to='sms_app.yesnoinfo')),
                ('s_rate_approval', models.ForeignKey(blank=True, db_column='s_rate_approval', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_rate_approval', to='sms_app.yesnoinfo')),
                ('s_sow', models.ForeignKey(blank=True, db_column='s_sow', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_sow', to='sms_app.yesnoinfo')),
                ('s_trans_imp', models.ForeignKey(blank=True, db_column='trans_imp', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trans_imp', to='sms_app.yesnoinfo')),
                ('s_approver_name', models.ForeignKey(blank=True, db_column='s_approver_name', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_approver_name', to='sms_app.myuser')),
                ('s_created_by', models.ForeignKey(blank=True, db_column='s_created_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_created_by', to='sms_app.myuser')),
                ('s_joint_call_name', models.ManyToManyField(db_column='s_joint_call_name', related_name='s_joint_call_name', to='sms_app.myuser')),
                ('s_updated_by', models.ForeignKey(db_column='s_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['s_sale_number'],
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(default='', max_length=100, null=True)),
                ('country', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.country')),
            ],
        ),
        migrations.AddField(
            model_name='location_info',
            name='loc_state',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.state'),
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.state'),
        ),
        migrations.CreateModel(
            name='RequirementsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('req_number', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('req_backlogs', models.TextField(default='', max_length=500)),
                ('req_phase', models.CharField(default=1, max_length=100)),
                ('req_remarks', models.TextField(blank=True, default='', max_length=500, null=True)),
                ('req_raisedon', models.DateField(blank=True, null=True)),
                ('req_implementedon', models.DateField(blank=True, null=True)),
                ('req_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('req_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('req_attachment', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.Requirements_mod.requirements_directory_path)),
                ('req_bugimprove', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.reqbugimprove')),
                ('req_module', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.reqmodule')),
                ('req_status', models.ForeignKey(default=2, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.statuslist')),
                ('req_implementedby', models.ForeignKey(blank=True, db_column='req_implementedby', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='req_implementedby', to='sms_app.myuser')),
                ('req_owner', models.ForeignKey(db_column='req_owner', default='', on_delete=django.db.models.deletion.CASCADE, related_name='req_owner', to='sms_app.myuser')),
                ('req_updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
            ],
            options={
                'ordering': ['req_number'],
            },
        ),
        migrations.CreateModel(
            name='Loadingbay_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lb_job_no', models.CharField(default='', max_length=50)),
                ('lb_invoice', models.CharField(default='', max_length=100)),
                ('lb_eway_bill', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('lb_validity_date', models.DateTimeField(blank=True, null=True)),
                ('lb_stock_unloading_start_time', models.DateTimeField(blank=True, null=True)),
                ('lb_stock_unloading_end_time', models.DateTimeField(blank=True, null=True)),
                ('lb_stock_invoice_value', models.FloatField(default=0.0, null=True)),
                ('lb_stock_amount_in', models.FloatField(default=0.0, null=True)),
                ('lb_stock_currency_con', models.FloatField(default=0.0, null=True)),
                ('lb_crane_time', models.FloatField(default=0.0)),
                ('lb_forklift_time', models.FloatField(default=0.0)),
                ('lb_forklift_charges_std_l2hr', models.FloatField(default=0.0)),
                ('lb_crane_charges_std_l2hr', models.FloatField(default=0.0)),
                ('lb_forklift_charges_mod_l2h', models.FloatField(default=0.0)),
                ('lb_crane_charges_mod_l2h', models.FloatField(default=0.0)),
                ('lb_forklift_charges_std_g2hr', models.FloatField(default=0.0)),
                ('lb_crane_charges_std_g2hr', models.FloatField(default=0.0)),
                ('lb_forklift_charges_mod_g2hr', models.FloatField(default=0.0)),
                ('lb_crane_charges_mod_g2hr', models.FloatField(default=0.0)),
                ('lb_no_of_crane', models.IntegerField(default=0)),
                ('lb_no_of_forklift', models.IntegerField(default=0)),
                ('lb_job_no_id', models.ForeignKey(blank=True, db_column='lb_job_no_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lb_job_no_id', to='sms_app.gatein_info')),
                ('lb_mh_crane', models.ForeignKey(db_column='lb_mh_crane', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lb_mh_crane', to='sms_app.gstexcemptioninfo')),
                ('lb_mh_forklift', models.ForeignKey(db_column='lb_mh_forklift', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lb_mh_forklift', to='sms_app.gstexcemptioninfo')),
                ('lb_mh_handtrolley', models.ForeignKey(db_column='lb_mh_handtrolley', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lb_mh_handtrolley', to='sms_app.gstexcemptioninfo')),
                ('lb_mh_manual', models.ForeignKey(db_column='lb_mh_manual', default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lb_mh_manual', to='sms_app.gstexcemptioninfo')),
                ('lb_packing_list', models.ForeignKey(db_column='lb_packing_list', on_delete=django.db.models.deletion.CASCADE, related_name='lb_packing_list', to='sms_app.gstexcemptioninfo')),
                ('lb_stock_invoice_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.currency_type')),
                ('lb_pouch_yes', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.sealedoropenedinfo')),
                ('lb_status', models.ForeignKey(default=6, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.statuslist')),
            ],
        ),
        migrations.CreateModel(
            name='EnquirynoteInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('en_enquirynumber', models.CharField(blank=True, max_length=100, null=True)),
                ('en_updatedon', models.DateTimeField(auto_now=True, null=True)),
                ('en_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('en_consignmentdetails', models.CharField(blank=True, max_length=1000, null=True)),
                ('en_vehicledetails', models.CharField(blank=True, max_length=100, null=True)),
                ('en_tripdetails', models.CharField(blank=True, max_length=1000, null=True)),
                ('en_vehicle_allotment', models.CharField(blank=True, max_length=1000, null=True)),
                ('en_tripclosure', models.CharField(blank=True, max_length=1000, null=True)),
                ('en_pickupdatetime', models.DateTimeField(blank=True, null=True)),
                ('en_customerdepartment', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerdepartmentinfo')),
                ('en_customername', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerinfo')),
                ('en_movement_type', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.movementtypeinfo')),
                ('en_fromlocaion', models.ForeignKey(blank=True, db_column='en_fromlocaion', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='en_fromlocaion', to='sms_app.places')),
                ('en_tolocation', models.ForeignKey(blank=True, db_column='en_tolocation', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='en_tolocation', to='sms_app.places')),
                ('en_touchpoint', models.ForeignKey(blank=True, db_column='en_touchpoint', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='en_touchpoint', to='sms_app.places')),
                ('en_touchpoint2', models.ForeignKey(blank=True, db_column='en_touchpoint2', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='en_touchpoint2', to='sms_app.places')),
                ('en_touchpoint3', models.ForeignKey(blank=True, db_column='en_touchpoint3', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='en_touchpoint3', to='sms_app.places')),
                ('en_touchpoint4', models.ForeignKey(blank=True, db_column='en_touchpoint4', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='en_touchpoint4', to='sms_app.places')),
                ('en_status', models.ForeignKey(default=6, on_delete=django.db.models.deletion.CASCADE, to='sms_app.statuslist')),
                ('en_business_type', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.tr_businesstype_info')),
                ('en_trip_type', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.tr_triptype_info')),
                ('en_vehiclecategory', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehiclecategoryinfo')),
                ('en_vehicletype', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehicletypeinfo')),
                ('en_assignedto', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
                ('en_updated_by', models.ForeignKey(db_column='en_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='en_updated_by', to='sms_app.myuser')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_empid', models.CharField(default='', max_length=100)),
                ('emp_full_name', models.CharField(default='', max_length=100)),
                ('emp_email', models.CharField(default='', max_length=50)),
                ('emp_contact', models.CharField(default='', max_length=10)),
                ('emp_designation', models.CharField(choices=[('Director', 'Director'), ('Manager', 'Manager'), ('Supervisor', 'Supervisor'), ('Driver', 'Driver'), ('Helper', 'Helper')], default='', max_length=10)),
                ('emp_branch', models.CharField(choices=[('Chennai', 'Chennai'), ('Bangalore', 'Bangalore'), ('Hyderabad', 'Hyderabad')], default='User', max_length=10)),
                ('emp_password', models.CharField(default='', max_length=100)),
                ('emp_password_conf', models.CharField(default='', max_length=100)),
                ('emp_role', models.CharField(choices=[('Admin', 'Admin'), ('User', 'User')], default='User', max_length=10)),
                ('emp_status', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.statuslist')),
            ],
        ),
        migrations.CreateModel(
            name='DamagereportInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dam_wh_job_num', models.CharField(default='', max_length=300, null=True)),
                ('dam_GRN_num', models.CharField(blank=True, default='', max_length=300, null=True)),
                ('dam_comments', models.TextField(blank=True, null=True)),
                ('dam_damage_type', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.damageinfo')),
                ('dam_marks_numbers', models.ForeignKey(db_column='dam_marks_numbers', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dam_marks_numbers', to='sms_app.gstexcemptioninfo')),
                ('dam_no_of_units_deviation', models.ForeignKey(db_column='dam_no_of_units_deviation', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dam_no_of_units_deviation', to='sms_app.gstexcemptioninfo')),
                ('dam_ratification_process', models.ForeignKey(db_column='dam_ratification_process', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dam_ratification_process', to='sms_app.gstexcemptioninfo')),
                ('dam_status', models.ForeignKey(default=6, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.statuslist')),
            ],
        ),
        migrations.CreateModel(
            name='ConsignmentdetailInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('co_consignmentnumber', models.CharField(blank=True, max_length=20, null=True)),
                ('co_consignmentdate', models.DateField(blank=True, null=True)),
                ('co_containerdescription', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('co_freight_amount', models.CharField(blank=True, default='As Agreed', max_length=100, null=True)),
                ('co_seal_number', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('co_container_number', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('co_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('co_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('co_cusrefnum', models.CharField(blank=True, max_length=80, null=True)),
                ('co_cusrefnum_check', models.BooleanField(blank=True, null=True)),
                ('co_remarks', models.TextField(blank=True, max_length=500, null=True)),
                ('co_customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerinfo')),
                ('co_enquirynumber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.enquirynoteinfo')),
                ('co_gst_payable_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.gst_payable_info')),
                ('co_status', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.statuslist')),
                ('co_lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
            ],
        ),
        migrations.CreateModel(
            name='Stockdescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_description', models.CharField(default='', max_length=100)),
                ('stock_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkstocktype')),
            ],
            options={
                'ordering': ['stock_description'],
            },
        ),
        migrations.CreateModel(
            name='PkstockpurchasesInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sp_thick_height', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_width', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_length', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_cft', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_quantity', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_total_cft', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_gst', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_gst_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_totalbill_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('sp_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('sp_purchase_num', models.CharField(blank=True, max_length=50, null=True)),
                ('sp_size', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_rate', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_price', models.FloatField(blank=True, default=0, null=True)),
                ('sp_stock_in_date', models.DateTimeField(blank=True, null=True)),
                ('sp_remarks', models.TextField(blank=True, null=True)),
                ('sp_vendor_bill', models.CharField(blank=True, max_length=100, null=True)),
                ('sp_thick_height_reduced', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_width_reduced', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_length_reduced', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_quantity_reduced', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_cft_reduced', models.FloatField(blank=True, default=0.0, null=True)),
                ('sp_category', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.category')),
                ('sp_stock_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkstocktype')),
                ('sp_source', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.source')),
                ('sp_stock_description', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.stockdescription')),
                ('sp_uom', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.unitofmeasure')),
                ('sp_updated_by', models.ForeignKey(db_column='sp_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sp_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['sp_purchase_num'],
            },
        ),
        migrations.AddField(
            model_name='pkneedassessmentinfo',
            name='na_consumables',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.stockdescription'),
        ),
        migrations.CreateModel(
            name='Nadimension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nad_length', models.FloatField(default=0.0)),
                ('nad_width', models.FloatField(default=0.0)),
                ('nad_height', models.FloatField(default=0.0)),
                ('nad_quantity', models.IntegerField(default=0)),
                ('nad_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('nad_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('nad_job_weight', models.FloatField(default=0.0)),
                ('nad_plywood_thickness', models.FloatField(default=0.0)),
                ('nad_cost_unit', models.FloatField(blank=True, default=0.0, null=True)),
                ('nad_cost_total', models.FloatField(blank=True, default=0.0, null=True)),
                ('nad_item', models.CharField(blank=True, max_length=100, null=True)),
                ('na_clearance', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('nad_dimension_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.nadimensiontype')),
                ('nad_type_of_req', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.natypeofreq')),
                ('nad_assess_num', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkneedassessmentinfo')),
                ('nad_wood_type', models.ForeignKey(limit_choices_to={'id__in': [1, 4]}, on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkstocktype')),
                ('nad_wood_description', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.stockdescription')),
                ('nad_uom', models.ForeignKey(blank=True, default='', limit_choices_to={'id__in': [1, 2, 3, 4]}, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.unitofmeasure')),
                ('nad_updated_by', models.ForeignKey(db_column='nad_updated_by', on_delete=django.db.models.deletion.CASCADE, related_name='nad_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['nad_assess_num'],
            },
        ),
        migrations.CreateModel(
            name='task_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_task', models.TextField(max_length=100)),
                ('sub_task', models.TextField(max_length=100)),
                ('remarks', models.TextField(blank=True, max_length=30, null=True)),
                ('task_id', models.CharField(blank=True, max_length=100, null=True)),
                ('t_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('t_requirement_description', models.TextField(blank=True, max_length=500, null=True)),
                ('application', models.ForeignKey(db_column='application', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='application', to='sms_app.applicaiton_info')),
                ('t_requirement_id', models.ForeignKey(blank=True, db_column='t_requirement_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='t_requirement_id', to='sms_app.requirementsinfo')),
                ('t_updated_by', models.ForeignKey(db_column='t_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='t_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['task_id'],
            },
        ),
        migrations.CreateModel(
            name='UnitInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_name', models.CharField(default='', max_length=100)),
                ('ui_branch_name', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.location_info')),
            ],
            options={
                'ordering': ['unit_name'],
            },
        ),
        migrations.CreateModel(
            name='LocationmasterInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lm_length', models.FloatField(default='0.0')),
                ('lm_width', models.FloatField(default='0.0')),
                ('lm_height', models.FloatField(default='0.0')),
                ('lm_size', models.FloatField(default='0.0')),
                ('lm_area_occupied', models.FloatField(default='0.0')),
                ('lm_available_area', models.FloatField(default='0.0')),
                ('lm_total_volume', models.FloatField(default='0.0')),
                ('lm_available_volume', models.FloatField(default='0.0')),
                ('lm_volume_occupied', models.FloatField(default='0.0')),
                ('lm_concatenate', models.CharField(default='', max_length=10)),
                ('lm_areaside', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.bayinfo')),
                ('lm_customer_name', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerinfo')),
                ('lm_wh_location', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.location_info')),
                ('lm_customer_model', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.trbusinesstypeinfo')),
                ('lm_wh_unit', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.unitinfo')),
            ],
        ),
        migrations.AddField(
            model_name='bayinfo',
            name='Bay_unit_name',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.unitinfo'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='asset_unit',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.unitinfo'),
        ),
        migrations.CreateModel(
            name='User_extInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_contact', models.CharField(blank=True, max_length=10, null=True)),
                ('emp_pan', models.CharField(blank=True, max_length=100, null=True)),
                ('emp_uan', models.CharField(blank=True, max_length=100, null=True)),
                ('emp_esi', models.CharField(blank=True, max_length=100, null=True)),
                ('emp_aadhar', models.CharField(blank=True, max_length=100, null=True)),
                ('emp_DOB', models.CharField(blank=True, max_length=100, null=True)),
                ('emp_DOJ', models.CharField(blank=True, max_length=100, null=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.department_info')),
                ('emp_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.location_info')),
                ('emp_designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.designationinfo')),
                ('emp_organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.business_sol_info')),
                ('emp_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.roleinfo')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VehiclemasterInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vm_tonnage', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('vm_containersize', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('vm_capacity', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_registrationnumber', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_millage', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_cost', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_yearofdepreciation', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_ofdepreciation', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_registrationdate', models.DateField(blank=True, null=True)),
                ('vm_valueofvehicle', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_chassisnumber', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_enginenumber', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_batterynumber', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_batterywarrantydate', models.DateField(blank=True, null=True)),
                ('vm_numberoftyres', models.IntegerField(blank=True, default='', null=True)),
                ('vm_tyremake', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_stephanietyremake', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_stephanietyre', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_tyre1', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_tyre2', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_tyre3', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_tyre4', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_fireextinguisher', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_fireextexpirydate', models.DateField(blank=True, null=True)),
                ('vm_firstaidkit', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_fakexpirydate', models.DateField(blank=True, null=True)),
                ('vm_gprstrackingid', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_toolboxcontent1', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_toolboxcontent2', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_toolboxcontent3', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_toolboxcontent4', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_toolboxcontent5', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_gprssimid', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_company', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_policy', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_policyexpirydate', models.DateField(blank=True, null=True)),
                ('vm_premium', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_icvvalue', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_ncb', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_rtoname', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_fcdate', models.DateField(blank=True, null=True)),
                ('vm_receipt', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_fcamount', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_fcexpirydate', models.DateField(blank=True, null=True)),
                ('vm_agencyname', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_agencycharges', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_roadtaxamount', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_roadtaxexpirydate', models.DateField(blank=True, null=True)),
                ('vm_roadtaxreceipt', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_roadtaxreceiptdate', models.DateField(blank=True, null=True)),
                ('vm_permitexpirydate', models.DateField(blank=True, null=True)),
                ('vm_permit', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_permitamount', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_permitdate', models.DateField(blank=True, null=True)),
                ('vm_pollutioncertificate', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_pollutioncertificateamt', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_pollutioncertificatedate', models.DateField(blank=True, null=True)),
                ('vm_mobileappdeviceid', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_bpclcard', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_fastagid', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_primarydrivername', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_primarydrivermob', models.IntegerField(blank=True, default='', null=True)),
                ('vm_primarydriver_license', models.CharField(blank=True, max_length=100, null=True)),
                ('vm_primarydriver_license_exp_date', models.CharField(blank=True, max_length=100, null=True)),
                ('vm_potenialrevenue', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_secondarydrivername', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_secondarydrivermob', models.IntegerField(blank=True, default='', null=True)),
                ('vm_secondarydriver_license', models.CharField(blank=True, max_length=100, null=True)),
                ('vm_secondarydriver_license_exp_date', models.CharField(blank=True, max_length=100, null=True)),
                ('vm_budgetexpense', models.CharField(blank=True, max_length=30, null=True)),
                ('vm_axletype', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.axletypeinfo')),
                ('vm_body', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.bodyinfo')),
                ('vm_category', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehiclecategoryinfo')),
                ('vm_fccopy', models.ForeignKey(blank=True, db_column='vm_fccopy', default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vm_fccopy', to='sms_app.statuslist')),
                ('vm_fueltype', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.fueltypeinfo')),
                ('vm_insurancecopy', models.ForeignKey(blank=True, db_column='vm_insurancecopy', default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vm_insurancecopy', to='sms_app.statuslist')),
                ('vm_insurancetype', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.insurance_type')),
                ('vm_ownership', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.ownershipinfo')),
                ('vm_permitcopy', models.ForeignKey(blank=True, db_column='vm_permitcopy', default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vm_permitcopy', to='sms_app.statuslist')),
                ('vm_permittype', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.permittypeinfo')),
                ('vm_pollutioncertificatecopy', models.ForeignKey(blank=True, db_column='vm_pollutioncertificatecopy', default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vm_pollutioncertificatecopy', to='sms_app.statuslist')),
                ('vm_roadtaxcopy', models.ForeignKey(blank=True, db_column='vm_roadtaxcopy', default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vm_roadtaxcopy', to='sms_app.statuslist')),
                ('vm_vehiclecolour', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehiclecolourinfo')),
                ('vm_vehiclemodel', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehiclemodelinfo')),
                ('vm_vehicletype', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehicletypeinfo')),
                ('vm_vehiclemanufacturer', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.vhmanufacturerinfo')),
            ],
        ),
        migrations.AddField(
            model_name='pkneedassessmentinfo',
            name='na_vehicle_type',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehicletypeinfo'),
        ),
        migrations.CreateModel(
            name='Dispatch_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dispatch_depature_date', models.DateTimeField(blank=True, null=True)),
                ('dispatch_driver', models.CharField(max_length=20)),
                ('dispatch_contact_number', models.CharField(max_length=20)),
                ('dispatch_DL_number', models.CharField(max_length=20)),
                ('dispatch_otl', models.CharField(max_length=20)),
                ('dispatch_transporter', models.CharField(max_length=100)),
                ('dispatch_truck_number', models.CharField(max_length=20)),
                ('dispatch_comments', models.TextField(blank=True, default='Goods In Good Condition', max_length=300)),
                ('dispatch_num', models.CharField(blank=True, max_length=20)),
                ('dispatch_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('dispatch_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('dispatch_mawb', models.CharField(blank=True, max_length=100, null=True)),
                ('dispatch_invoice_list', models.CharField(blank=True, max_length=100000, null=True)),
                ('dispatch_job_num_list', models.CharField(blank=True, max_length=100000, null=True)),
                ('dispatch_total_weight', models.FloatField(blank=True, default=0.0, null=True)),
                ('dispatch_total_goods', models.IntegerField(blank=True, default=0, null=True)),
                ('dispatch_billing_truck_type', models.ForeignKey(blank=True, db_column='dispatch_billing_truck_type', default=3, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dispatch_billing_truck_type', to='sms_app.check_in_out')),
                ('dispatch_customer', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerinfo')),
                ('dispatch_cargo_picked', models.ForeignKey(db_column='dispatch_cargo_picked', on_delete=django.db.models.deletion.CASCADE, related_name='dispatch_cargo_picked', to='sms_app.gstexcemptioninfo')),
                ('dispatch_sticker_pasted_bvm', models.ForeignKey(blank=True, db_column='dispatch_sticker_pasted_bvm', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dispatch_sticker_pasted_bvm', to='sms_app.labels_pasted_info')),
                ('dispatch_status', models.ForeignKey(default=6, on_delete=django.db.models.deletion.CASCADE, to='sms_app.statuslist')),
                ('dispatch_truck_type', models.ForeignKey(db_column='dispatch_truck_type', default='', on_delete=django.db.models.deletion.CASCADE, related_name='dispatch_truck_type', to='sms_app.vehicletypeinfo')),
                ('dispatch_truck_type_billing', models.ForeignKey(blank=True, db_column='dispatch_truck_type_billing', default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dispatch_truck_type_billing', to='sms_app.vehicletypeinfo')),
                ('dispatch_updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
            ],
        ),
        migrations.CreateModel(
            name='Vendor_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vend_name', models.CharField(blank=True, max_length=100, null=True)),
                ('vend_description', models.CharField(default='', max_length=100)),
                ('vend_contact', models.CharField(max_length=10)),
                ('vend_contact_per', models.CharField(default='', max_length=50)),
                ('vend_gstin', models.CharField(default='', max_length=15)),
                ('vend_designation', models.CharField(max_length=30)),
                ('vend_email', models.CharField(max_length=50)),
                ('vend_address', models.TextField(blank=True, max_length=500, null=True)),
                ('vend_remarks', models.TextField(blank=True, max_length=500, null=True)),
                ('vend_start_date', models.DateField(blank=True, null=True)),
                ('vend_expiry_date', models.DateField(blank=True, null=True)),
                ('vend_days_remaining', models.IntegerField(blank=True, default=0.0, null=True)),
                ('vend_attachment', models.FileField(blank=True, null=True, upload_to=sms_app.sub_models.vendor_info_mod.vendor_directory_path)),
                ('vend_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('vend_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('vend_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.location_info')),
                ('vend_service_type', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.servicetype_info')),
                ('vend_status', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.activeinactiveinfo')),
                ('vend_updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
            ],
            options={
                'ordering': ['vend_name'],
            },
        ),
        migrations.CreateModel(
            name='Service_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ser_start_date', models.CharField(max_length=10)),
                ('ser_end_date', models.CharField(max_length=10)),
                ('ser_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ser_asset', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.assetinfo')),
                ('ser_status', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.statuslist')),
                ('ser_vendor', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.vendor_info')),
            ],
        ),
        migrations.AddField(
            model_name='insurance_info',
            name='ins_vendor',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.vendor_info'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='asset_vendor',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.vendor_info'),
        ),
        migrations.CreateModel(
            name='Warehouse_goods_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wh_job_no', models.CharField(default='', max_length=200)),
                ('wh_goods_invoice', models.CharField(blank=True, max_length=200, null=True)),
                ('wh_goods_pieces', models.FloatField()),
                ('wh_goods_length', models.FloatField()),
                ('wh_goods_width', models.FloatField()),
                ('wh_goods_height', models.FloatField()),
                ('wh_goods_weight', models.FloatField()),
                ('wh_goods_volume_weight', models.FloatField(default=0.0)),
                ('wh_fumigation_date', models.DateTimeField(blank=True, null=True)),
                ('wh_chargeable_weight', models.FloatField(default=0.0, null=True)),
                ('wh_cbm', models.FloatField(default=0.0, null=True)),
                ('wh_available_area', models.FloatField(default=0.0, null=True)),
                ('wh_available_volume', models.FloatField(default=0.0, null=True)),
                ('wh_goods_area', models.FloatField(default=0.0, null=True)),
                ('wh_checkin_time', models.DateTimeField(null=True)),
                ('wh_checkout_time', models.DateTimeField(null=True)),
                ('wh_storage_time', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_qr_rand_num', models.CharField(blank=True, max_length=200, null=True)),
                ('wh_dispatch_num', models.CharField(blank=True, max_length=200, null=True)),
                ('wh_consigner', models.CharField(blank=True, max_length=200, null=True)),
                ('wh_consignee', models.CharField(blank=True, max_length=200, null=True)),
                ('wh_comments', models.TextField(blank=True, null=True)),
                ('wh_invoice_value', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_invoice_amount_inr', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_voucher_num', models.CharField(blank=True, max_length=200, null=True)),
                ('wh_po_num', models.CharField(blank=True, max_length=100, null=True)),
                ('wh_invoice_weight_unit', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_invoice_qty', models.IntegerField(blank=True, null=True)),
                ('wh_gross_weight', models.FloatField(blank=True, null=True)),
                ('wh_total_qty', models.IntegerField(blank=True, default=0, null=True)),
                ('wh_loading_charge_unit', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_total_loading_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_storage_cost_per_day', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_storage_cost_total', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_forklift_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_forklift_cost_l2hr', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_forklift_cost_g2hr', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_crane_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_crane_cost_l2h', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_crane_cost_g2h', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_total_invoice_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('wh_Dam_rep_job_num_id', models.ForeignKey(blank=True, db_column='wh_Dam_rep_job_num_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wh_Dam_rep_job_num_id', to='sms_app.damagereportinfo')),
                ('wh_bay', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.bayinfo')),
                ('wh_branch', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.location_info')),
                ('wh_check_in_out', models.ForeignKey(db_column='wh_check_in_out', default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wh_check_in_out', to='sms_app.check_in_out')),
                ('wh_customer_name', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerinfo')),
                ('wh_customer_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.trbusinesstypeinfo')),
                ('wh_damages', models.ForeignKey(db_column='wh_damages', default=6, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wh_damages', to='sms_app.damageinfo')),
                ('wh_dimension_deviation', models.ForeignKey(db_column='wh_dimension_deviation', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wh_dimension_deviation', to='sms_app.gstexcemptioninfo')),
                ('wh_dispatch_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.dispatch_info')),
                ('wh_fumigation_action', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.fumigation_actioninfo')),
                ('wh_fumigation_process', models.ForeignKey(blank=True, db_column='wh_fumigation_process', default=1, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wh_fumigation_process', to='sms_app.gstexcemptioninfo')),
                ('wh_gate_injob_no_id', models.ForeignKey(blank=True, db_column='wh_job_no_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wh_job_no_id', to='sms_app.gatein_info')),
                ('wh_goods_package_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.packagetype_info')),
                ('wh_goods_status', models.ForeignKey(db_column='wh_goods_status', default=6, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wh_goods_status', to='sms_app.statuslist')),
                ('wh_lb_job_no_id', models.ForeignKey(blank=True, db_column='wh_lb_job_no_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wh_lb_job_no_id', to='sms_app.loadingbay_info')),
                ('wh_mismatches', models.ForeignKey(db_column='wh_mismatches', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wh_mismatches', to='sms_app.gstexcemptioninfo')),
                ('wh_no_of_units_deviation', models.ForeignKey(db_column='wh_no_of_units_deviation', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wh_no_of_units_deviation', to='sms_app.gstexcemptioninfo')),
                ('wh_stack_layer', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.stackinginfo')),
                ('wh_truck_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehicletypeinfo')),
                ('wh_unit', models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.unitinfo')),
                ('wh_uom', models.ForeignKey(db_column='wh_uom', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wh_uom', to='sms_app.uom')),
                ('wh_weights_deviation', models.ForeignKey(db_column='wh_weights_deviation', default=2, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wh_weights_deviation', to='sms_app.gstexcemptioninfo')),
            ],
        ),
        migrations.CreateModel(
            name='Warehouse_stock_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wh_stock_invoice', models.CharField(max_length=20)),
                ('wh_stock_customer_name', models.CharField(max_length=20)),
                ('wh_stock_arrival_date', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_unloading_start_time', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_unloading_end_time', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_FRD_time', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_invoice_value', models.IntegerField(blank=True, null=True)),
                ('wh_stock_amount_in', models.IntegerField(blank=True, null=True)),
                ('wh_stock_transporters', models.CharField(blank=True, max_length=100, null=True)),
                ('wh_stock_truck_number', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_truck_type', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_consigner_name', models.CharField(blank=True, max_length=100, null=True)),
                ('wh_stock_consignee_name', models.CharField(blank=True, max_length=100, null=True)),
                ('wh_stock_docs_received', models.CharField(blank=True, max_length=10, null=True)),
                ('wh_stock_HAWB', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_MAWB', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_destination', models.CharField(blank=True, max_length=30, null=True)),
                ('wh_stock_case_number', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_invoice_weight', models.IntegerField(blank=True, null=True)),
                ('wh_stock_CBM', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_eway_bill', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_fumigation_status', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_location', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_days_in_wh', models.IntegerField(blank=True, null=True)),
                ('wh_stock_ship_date', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_out_time', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_labels_pasted_by', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_remarks', models.CharField(blank=True, max_length=250, null=True)),
                ('wh_stock_driver_name', models.CharField(blank=True, max_length=250, null=True)),
                ('wh_stock_driver_contact', models.CharField(blank=True, max_length=250, null=True)),
                ('wh_stock_driver_lic', models.CharField(blank=True, max_length=250, null=True)),
                ('wh_stock_driver_name_out', models.CharField(blank=True, max_length=250, null=True)),
                ('wh_stock_driver_contact_out', models.CharField(blank=True, max_length=250, null=True)),
                ('wh_stock_driver_lic_out', models.CharField(blank=True, max_length=250, null=True)),
                ('wh_stock_arrival_date_out', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_unloading_start_time_out', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_unloading_end_time_out', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_FRD_time_out', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_transporters_out', models.CharField(blank=True, max_length=100, null=True)),
                ('wh_stock_truck_number_out', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_truck_type_out', models.CharField(blank=True, max_length=20, null=True)),
                ('wh_stock_invoice_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.currency_type')),
                ('wh_stock_movement_type', models.ForeignKey(blank=True, max_length=20, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.stock_movement_type')),
                ('wh_stock_type', models.ForeignKey(blank=True, max_length=20, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.stock_type')),
            ],
        ),
        migrations.CreateModel(
            name='WhratemasterInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whrm_max_wt', models.FloatField(default=0.0)),
                ('whrm_min_wt', models.FloatField(default=0.0)),
                ('whrm_min_area', models.FloatField(default=0.0)),
                ('whrm_max_area', models.FloatField(default=0.0)),
                ('whrm_rate', models.FloatField(default=0.0)),
                ('whrm_description', models.CharField(blank=True, max_length=20, null=True)),
                ('whrm_updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('whrm_businessmodel', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.trbusinesstypeinfo')),
                ('whrm_charge_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.wh_chargetype')),
                ('whrm_customer_name', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerinfo')),
                ('whrm_vehicle_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehicletypeinfo')),
                ('whrm_updated_by', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle_allotmentInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('va_vehicletype_selection_requested', models.BooleanField(blank=True, null=True)),
                ('va_vehicletype_selection_placed', models.BooleanField(blank=True, null=True)),
                ('va_drivername', models.CharField(blank=True, max_length=30, null=True)),
                ('va_driver_lic', models.CharField(blank=True, max_length=100, null=True)),
                ('va_driver_lic_expiry', models.CharField(blank=True, max_length=100, null=True)),
                ('va_drivernumber', models.CharField(blank=True, max_length=30, null=True)),
                ('va_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('va_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('va_remarks', models.TextField(blank=True, max_length=300, null=True)),
                ('va_consignmentnumber', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.consignmentdetailinfo')),
                ('va_enquirynumber', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.enquirynoteinfo')),
                ('va_vehiclesource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.ownershipinfo')),
                ('va_vehiclenumber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehiclemasterinfo')),
                ('va_vehicletype', models.ForeignKey(db_column='va_vehicletype', on_delete=django.db.models.deletion.CASCADE, related_name='va_vehicletype', to='sms_app.vehicletypeinfo')),
                ('va_vehicletype_placed', models.ForeignKey(db_column='va_vehicletype_placed', on_delete=django.db.models.deletion.CASCADE, related_name='va_vehicletype_placed', to='sms_app.vehicletypeinfo')),
                ('va_updated_by', models.ForeignKey(db_column='va_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='va_updated_by', to='sms_app.myuser')),
            ],
        ),
        migrations.CreateModel(
            name='TripdetailInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tr_tripnumber', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('tr_vehicletype_selection_requested', models.BooleanField(blank=True, null=True)),
                ('tr_vehicletype_selection_placed', models.BooleanField(blank=True, null=True)),
                ('tr_drivername', models.CharField(blank=True, max_length=30, null=True)),
                ('tr_driver_lic', models.CharField(blank=True, max_length=100, null=True)),
                ('tr_drivernumber', models.CharField(blank=True, max_length=30, null=True)),
                ('tr_departedkm', models.IntegerField(blank=True, default=0, null=True)),
                ('tr_departeddate', models.DateTimeField(blank=True, null=True)),
                ('tr_reportedkm', models.IntegerField(blank=True, default=0, null=True)),
                ('tr_reporteddate', models.DateTimeField(blank=True, null=True)),
                ('tr_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('tr_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('tr_remarks', models.TextField(blank=True, max_length=500, null=True)),
                ('tr_loading_time', models.DateTimeField(blank=True, null=True)),
                ('tr_unloading_time', models.DateTimeField(blank=True, null=True)),
                ('tc_tripcost', models.FloatField(default=0.0)),
                ('tc_parkingcost', models.FloatField(default=0.0)),
                ('tc_tollcost', models.FloatField(default=0.0)),
                ('tc_loadingcost', models.FloatField(default=0.0)),
                ('tc_unloadingcost', models.FloatField(default=0.0)),
                ('tc_weighmentcost', models.FloatField(default=0.0)),
                ('tc_handlingcost', models.FloatField(default=0.0)),
                ('tc_pod', models.FloatField(default=0.0)),
                ('tr_category', models.ForeignKey(db_column='tr_category', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tr_category', to='sms_app.trip_category_info')),
                ('tr_consignmentnumber', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.consignmentdetailinfo')),
                ('tr_departedlocation', models.ForeignKey(blank=True, db_column='tr_departedlocation', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tr_departedlocation', to='sms_app.places')),
                ('tr_enquirynumber', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.enquirynoteinfo')),
                ('tr_iou', models.ForeignKey(blank=True, db_column='tr_iou', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tr_iou', to='sms_app.iou_info')),
                ('tr_reportedlocation', models.ForeignKey(blank=True, db_column='tr_reportedlocation', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tr_reportedlocation', to='sms_app.places')),
                ('tr_vehiclesource', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.ownershipinfo')),
                ('tc_financestatus', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='sms_app.tripstatusinfo')),
                ('tr_vehiclenumber', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehiclemasterinfo')),
                ('tr_vehicletype', models.ForeignKey(db_column='tr_vehicletype', default='', on_delete=django.db.models.deletion.CASCADE, related_name='tr_vehicletype', to='sms_app.vehicletypeinfo')),
                ('tr_vehicletype_placed', models.ForeignKey(db_column='tr_vehicletype_placed', default='', on_delete=django.db.models.deletion.CASCADE, related_name='tr_vehicletype_placed', to='sms_app.vehicletypeinfo')),
                ('tr_updated_by', models.ForeignKey(db_column='tr_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tr_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['tr_tripnumber'],
            },
        ),
        migrations.CreateModel(
            name='timesheet_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ts_start_date', models.DateTimeField()),
                ('ts_end_date', models.DateTimeField()),
                ('ts_hours', models.FloatField(default=0.0)),
                ('ts_remarks', models.TextField(blank=True, max_length=500, null=True)),
                ('ts_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('ts_task_id', models.ForeignKey(db_column='ts_task_id', default=5, on_delete=django.db.models.deletion.CASCADE, related_name='ts_task_id', to='sms_app.task_info')),
                ('ts_developer', models.ForeignKey(db_column='ts_developer', on_delete=django.db.models.deletion.CASCADE, related_name='ts_developer', to='sms_app.myuser')),
                ('ts_updated_by', models.ForeignKey(db_column='ts_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ts_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['ts_task_id'],
            },
        ),
        migrations.CreateModel(
            name='Sales_target_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('st_start_date', models.DateField(blank=True, null=True)),
                ('st_end_date', models.DateField(blank=True, null=True)),
                ('st_target_revenue', models.FloatField(blank=True, default=0.0, null=True)),
                ('st_target_customer', models.IntegerField(blank=True, default=0, null=True)),
                ('st_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('st_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('st_remarks', models.TextField(blank=True)),
                ('st_target_customer_calls', models.IntegerField(blank=True, default=0, null=True)),
                ('st_sales_person', models.ForeignKey(db_column='st_sales_person', on_delete=django.db.models.deletion.CASCADE, related_name='st_sales_person', to='sms_app.myuser')),
                ('st_updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
            ],
        ),
        migrations.CreateModel(
            name='Sales_Comments_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sc_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('sc_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('sc_comments', models.TextField(max_length=300)),
                ('sc_complaints', models.TextField(blank=True, max_length=300, null=True)),
                ('sc_compliments', models.TextField(blank=True, max_length=300, null=True)),
                ('sc_date_of_call', models.DateField()),
                ('sc_call_nature', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.callnature')),
                ('sc_call_purpose', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.callpurpose')),
                ('sc_call_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.calltype')),
                ('sc_sales_number', models.ForeignKey(db_column='SalesInfo', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='SalesInfo', to='sms_app.salesinfo')),
                ('sc_updated_by', models.ForeignKey(db_column='sc_added_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sc_added_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['sc_sales_number'],
            },
        ),
        migrations.CreateModel(
            name='RtratemasterInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ro_rate', models.IntegerField(default='')),
                ('ro_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('ro_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('ro_customer', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerinfo')),
                ('ro_customerdepartment', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerdepartmentinfo')),
                ('ro_fromlocation', models.ForeignKey(db_column='ro_fromlocation', default='', on_delete=django.db.models.deletion.CASCADE, related_name='ro_fromlocation', to='sms_app.places')),
                ('ro_tolocation', models.ForeignKey(db_column='ro_tolocation', default='', on_delete=django.db.models.deletion.CASCADE, related_name='ro_tolocation', to='sms_app.places')),
                ('ro_touchpoint', models.ForeignKey(blank=True, db_column='ro_touchpoint', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ro_touchpoint', to='sms_app.places')),
                ('ro_touchpoint2', models.ForeignKey(blank=True, db_column='ro_touchpoint2', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ro_touchpoint2', to='sms_app.places')),
                ('ro_touchpoint3', models.ForeignKey(blank=True, db_column='ro_touchpoint3', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ro_touchpoint3', to='sms_app.places')),
                ('ro_touchpoint4', models.ForeignKey(blank=True, db_column='ro_touchpoint4', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ro_touchpoint4', to='sms_app.places')),
                ('ro_vehiclecategory', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehiclecategoryinfo')),
                ('ro_vehicletype', models.ForeignKey(db_column='ro_vehicletype', default='', on_delete=django.db.models.deletion.CASCADE, related_name='ro_vehicletype', to='sms_app.vehicletypeinfo')),
                ('ro_updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
            ],
        ),
        migrations.CreateModel(
            name='POdimension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pod_length', models.FloatField(default=0.0)),
                ('pod_width', models.FloatField(default=0.0)),
                ('pod_height', models.FloatField(default=0.0)),
                ('pod_quantity', models.IntegerField(default=0)),
                ('pod_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('pod_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('pod_job_weight', models.FloatField(default=0.0)),
                ('pod_plywood_thickness', models.FloatField(default=0.0)),
                ('pod_cost_unit', models.FloatField(blank=True, default=0.0, null=True)),
                ('pod_cost_total', models.FloatField(blank=True, default=0.0, null=True)),
                ('pod_item', models.CharField(max_length=100)),
                ('pod_delivery_schedule_date', models.DateField(blank=True, null=True)),
                ('pod_assess_num', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkneedassessmentinfo')),
                ('pod_po_num', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkpurchaseorderinfo')),
                ('pod_type_of_req', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.natypeofreq')),
                ('pod_wood_type', models.ForeignKey(limit_choices_to={'id__in': [1, 4]}, on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkstocktype')),
                ('pod_wood_description', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.stockdescription')),
                ('pod_uom', models.ForeignKey(blank=True, default='', limit_choices_to={'id__in': [1, 2, 3, 4]}, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.unitofmeasure')),
                ('pod_updated_by', models.ForeignKey(db_column='pod_updated_by', on_delete=django.db.models.deletion.CASCADE, related_name='pod_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['pod_assess_num'],
            },
        ),
        migrations.CreateModel(
            name='PkstockvebdorInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spv_vendor_bill', models.CharField(default='-', max_length=30)),
                ('spv_vendor_bill_date', models.DateField()),
                ('spv_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('spv_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('spv_stock_Purchasetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkstockpurchasetype')),
                ('spv_vendor_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.vendor_info')),
                ('spv_updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
            ],
            options={
                'ordering': ['spv_vendor_bill'],
            },
        ),
        migrations.CreateModel(
            name='PkretrivalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pret_width', models.FloatField(blank=True, default=0.0, null=True)),
                ('pret_height', models.FloatField(blank=True, default=0.0, null=True)),
                ('pret_cft', models.FloatField(blank=True, default=0.0, null=True)),
                ('pret_rate', models.FloatField(blank=True, default=0.0, null=True)),
                ('pret_days', models.IntegerField(blank=True, default=0, null=True)),
                ('pret_total_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('pret_created_at', models.DateField(auto_now_add=True, null=True)),
                ('pret_updated_at', models.DateField(auto_now=True, null=True)),
                ('pret_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('pret_size', models.FloatField(blank=True, default=0.0, null=True)),
                ('pret_length', models.FloatField(blank=True, default=0.0, null=True)),
                ('pret_assessment_num', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkneedassessmentinfo')),
                ('pret_cost_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.costtype')),
                ('pret_stock_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkstocktype')),
                ('pret_stock_description', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.stockdescription')),
                ('pret_uom', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.unitofmeasure')),
                ('pret_updated_by', models.ForeignKey(db_column='pret_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pret_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['pret_cost_type'],
            },
        ),
        migrations.CreateModel(
            name='PkquotesInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qt_quotes_num', models.CharField(blank=True, max_length=100, null=True)),
                ('qt_date', models.DateField(blank=True, null=True)),
                ('qt_item_value', models.FloatField(blank=True, default=0.0, null=True)),
                ('qt_freight_charges', models.FloatField(blank=True, default=0.0, null=True)),
                ('qt_handling_charges', models.FloatField(blank=True, default=0.0, null=True)),
                ('qt_total', models.FloatField(blank=True, default=0.0, null=True)),
                ('qt_created_at', models.DateField(auto_now_add=True, null=True)),
                ('qt_updated_at', models.DateField(auto_now=True, null=True)),
                ('qt_updated_by', models.ForeignKey(db_column='qt_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='qt_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['qt_quotes_num'],
            },
        ),
        migrations.CreateModel(
            name='PkquotationInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pkqt_width', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_height', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_cft', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_rate', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_days', models.IntegerField(blank=True, default=0, null=True)),
                ('pkqt_total_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('pkqt_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('pkqt_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('pkqt_size', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_length', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_requirement_size', models.CharField(blank=True, max_length=100, null=True)),
                ('pkqt_width_req', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_height_req', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_length_req', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_width_boxod', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_height_boxod', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_length_boxod', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_box_id_clearance_l', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_box_id_clearance_w', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_box_id_clearance_h', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_box_od_clearance_l', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_box_od_clearance_w', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_box_od_clearance_h', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_quantity_req', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_sqrt_req', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_cft_req', models.FloatField(blank=True, default=0.0, null=True)),
                ('pkqt_assessment_num', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkneedassessmentinfo')),
                ('pkqt_cost_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.costtype')),
                ('pkqt_customer_name', models.ForeignKey(blank=True, db_column='pkqt_customer_name', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pkqt_customer_name', to='sms_app.customerinfo')),
                ('pkqt_dimension_type', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.nadimensiontype')),
                ('pkqt_item', models.ForeignKey(blank=True, db_column='pkqt_item', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pkqt_item', to='sms_app.pk_iteminfo')),
                ('pkqt_itemdescription', models.ForeignKey(blank=True, db_column='pkqt_itemdescription', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pkqt_itemdescription', to='sms_app.pk_itemdescriptioninfo')),
                ('pkqt_requirement', models.ForeignKey(blank=True, db_column='pkqt_requirement', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pkqt_requirement', to='sms_app.nadimension')),
                ('pkqt_stock_purchase_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkstockpurchasesinfo')),
                ('pkqt_stock_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkstocktype')),
                ('pkqt_stock_description', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.stockdescription')),
                ('pkqt_uom', models.ForeignKey(blank=True, db_column='pkqt_uom', default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pkqt_uom', to='sms_app.unitofmeasure')),
                ('pkqt_uom_calc', models.ForeignKey(blank=True, db_column='pkqt_uom_calc', default='', limit_choices_to={'id__in': [1, 2, 3, 4]}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pkqt_uom_calc', to='sms_app.unitofmeasure')),
                ('pkqt_updated_by', models.ForeignKey(db_column='pkqt_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pkqt_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['pkqt_cost_type'],
            },
        ),
        migrations.CreateModel(
            name='PkopeningstockInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('os_thick_height', models.IntegerField(blank=True, default=0, null=True)),
                ('os_width', models.IntegerField(blank=True, default=0, null=True)),
                ('os_length', models.IntegerField(blank=True, default=0, null=True)),
                ('os_cft', models.FloatField(blank=True, default=0.0, null=True)),
                ('os_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('os_total_cft', models.FloatField(blank=True, default=0.0, null=True)),
                ('os_gst', models.FloatField(blank=True, default=0.0, null=True)),
                ('os_gst_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('os_totalbill_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('os_created_at', models.DateField(auto_now_add=True, null=True)),
                ('os_updated_at', models.DateField(auto_now=True, null=True)),
                ('os_stock_number', models.CharField(blank=True, max_length=50, null=True)),
                ('os_rate', models.FloatField(blank=True, default=0.0, null=True)),
                ('os_price', models.FloatField(blank=True, default=0.0, null=True)),
                ('os_category', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.category')),
                ('os_type_of_wood', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.natypeofwood')),
                ('os_stock_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkstocktype')),
                ('os_source', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.source')),
                ('os_updated_by', models.ForeignKey(db_column='os_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='os_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['os_stock_number'],
            },
        ),
        migrations.AddField(
            model_name='pkneedassessmentinfo',
            name='na_updated_by',
            field=models.ForeignKey(db_column='na_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='na_updated_by', to='sms_app.myuser'),
        ),
        migrations.CreateModel(
            name='PkcostingsummaryInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cs_wood_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_engineer_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_labour_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_margin', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_total_cost_wm', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_rate_per_cft', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('cs_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('cs_total_cft', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_crane_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_ht_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_management_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_material_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_transport_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_total_cost_wom', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_address', models.TextField(blank=True, null=True)),
                ('cs_cost_includes', models.TextField(blank=True, null=True)),
                ('cs_notes', models.TextField(blank=True, null=True)),
                ('cs_terms_condition', models.TextField(blank=True, null=True)),
                ('cs_client_scope', models.TextField(blank=True, null=True)),
                ('cs_bvm_scope', models.TextField(blank=True, null=True)),
                ('cs_gst', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_final_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('cs_customer_name', models.ForeignKey(blank=True, db_column='cs_customer_name', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cs_customer_name', to='sms_app.customerinfo')),
                ('cs_assessment_num', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkneedassessmentinfo')),
                ('cs_customer_po', models.ForeignKey(db_column='cs_customer_po', on_delete=django.db.models.deletion.CASCADE, related_name='cs_customer_po', to='sms_app.pkpurchaseorderinfo')),
                ('cs_status', models.ForeignKey(db_column='cs_status', default=6, on_delete=django.db.models.deletion.CASCADE, related_name='cs_status', to='sms_app.statuslist')),
                ('cs_updated_by', models.ForeignKey(db_column='cs_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cs_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PkcostingInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ct_width', models.FloatField(blank=True, default=0.0, null=True)),
                ('ct_height', models.FloatField(blank=True, default=0.0, null=True)),
                ('ct_cft', models.FloatField(blank=True, default=0.0, null=True)),
                ('ct_rate', models.FloatField(blank=True, default=0.0, null=True)),
                ('ct_days', models.IntegerField(blank=True, default=0, null=True)),
                ('ct_total_cost', models.FloatField(blank=True, default=0.0, null=True)),
                ('ct_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('ct_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('ct_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('ct_size', models.FloatField(blank=True, default=0.0, null=True)),
                ('ct_length', models.FloatField(blank=True, default=0.0, null=True)),
                ('ct_requirement_size', models.CharField(blank=True, max_length=100, null=True)),
                ('ct_width_req', models.FloatField(blank=True, default=0.0, null=True)),
                ('ct_height_req', models.FloatField(blank=True, default=0.0, null=True)),
                ('ct_length_req', models.FloatField(blank=True, default=0.0, null=True)),
                ('ct_quantity_req', models.FloatField(blank=True, default=0.0, null=True)),
                ('ct_sqrt_req', models.FloatField(blank=True, default=0.0, null=True)),
                ('ct_cost_type', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.costtype')),
                ('ct_customer_name', models.ForeignKey(blank=True, db_column='ct_customer_name', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ct_customer_name', to='sms_app.customerinfo')),
                ('ct_item', models.ForeignKey(blank=True, db_column='ct_item', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ct_item', to='sms_app.pk_iteminfo')),
                ('ct_itemdescription', models.ForeignKey(blank=True, db_column='ct_itemdescription', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ct_itemdescription', to='sms_app.pk_itemdescriptioninfo')),
                ('ct_requirement', models.ForeignKey(blank=True, db_column='ct_requirement', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ct_requirement', to='sms_app.nadimension')),
                ('ct_stock_status', models.ForeignKey(db_column='ct_stock_status', default=1, on_delete=django.db.models.deletion.CASCADE, related_name='ct_stock_status', to='sms_app.pk_stock_statusinfo')),
                ('ct_assessment_num', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkneedassessmentinfo')),
                ('ct_customer_po', models.ForeignKey(blank=True, db_column='ct_customer_po', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ct_customer_po', to='sms_app.pkpurchaseorderinfo')),
                ('ct_stock_purchase_number', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkstockpurchasesinfo')),
                ('ct_stock_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.pkstocktype')),
                ('ct_stock_description', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.stockdescription')),
                ('ct_uom', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.unitofmeasure')),
                ('ct_updated_by', models.ForeignKey(db_column='ct_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ct_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['ct_cost_type'],
            },
        ),
        migrations.AddField(
            model_name='insurance_info',
            name='ins_updated_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser'),
        ),
        migrations.CreateModel(
            name='Fuelfillinginfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ff_fuel_rate', models.FloatField(default=0.0)),
                ('ff_fuel_price', models.FloatField(default=0.0)),
                ('ff_date', models.DateField()),
                ('ff_filled_ltr', models.FloatField(default=0.0)),
                ('ff_odometer_reading', models.IntegerField(default=0)),
                ('ff_remarks', models.TextField(blank=True, default='', max_length=500, null=True)),
                ('ff_created_at', models.DateField(auto_now_add=True, null=True)),
                ('ff_updated_at', models.DateField(auto_now=True, null=True)),
                ('ff_bunk_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.bunkname')),
                ('ff_city', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.city')),
                ('ff_loaction', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.places')),
                ('ff_vehicle_num', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehiclemasterinfo')),
                ('ff_updated_by', models.ForeignKey(db_column='ff_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ff_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['ff_vehicle_num'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exp_vendor_bill', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('exp_vendor_bill_date', models.DateTimeField(blank=True, null=True)),
                ('exp_service_start_date', models.DateTimeField(blank=True, null=True)),
                ('exp_service_end_date', models.DateTimeField(blank=True, null=True)),
                ('exp_rate', models.FloatField(blank=True, default=0.0, null=True)),
                ('exp_remarks', models.TextField(blank=True, max_length=300, null=True)),
                ('exp_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('exp_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('exp_gst_rate', models.FloatField(blank=True, default=18.0, null=True)),
                ('exp_gst_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('exp_total_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('exp_tds_rate', models.FloatField(blank=True, default=0.0, null=True)),
                ('exp_tds_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('exp_amount_payable', models.FloatField(blank=True, default=0.0, null=True)),
                ('exp_due_date', models.DateTimeField(blank=True, null=True)),
                ('exp_paid_date', models.DateTimeField(blank=True, null=True)),
                ('exp_created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('exp_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('exp_number', models.CharField(blank=True, max_length=20, null=True)),
                ('exp_business', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.business_sol_info')),
                ('exp_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.expensecategoryinfo')),
                ('exp_expense_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.expensetypeinfo')),
                ('exp_uom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.expenseuominfo')),
                ('exp_branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.location_info')),
                ('exp_unit', models.ManyToManyField(to='sms_app.unitinfo')),
                ('exp_vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.vendor_info')),
                ('exp_updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
            ],
            options={
                'ordering': ['exp_amount_payable'],
            },
        ),
        migrations.CreateModel(
            name='Enquirynotevehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('env_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('env_created_at', models.DateField(auto_now_add=True, null=True)),
                ('env_updated_at', models.DateField(auto_now=True, null=True)),
                ('env_enquirynumber', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.enquirynoteinfo')),
                ('env_vehiclecategory', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehiclecategoryinfo')),
                ('env_vehicletype', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.vehicletypeinfo')),
                ('env_updated_by', models.ForeignKey(db_column='env_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='env_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['env_enquirynumber'],
            },
        ),
        migrations.CreateModel(
            name='ConsignmentgoodsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cg_consigner', models.CharField(default='', max_length=50)),
                ('cg_consignee', models.CharField(default='', max_length=50)),
                ('cg_consignerinvoice', models.CharField(max_length=50)),
                ('cg_consignerinvoice_date', models.DateField()),
                ('cg_consignervalue', models.IntegerField(default='')),
                ('cg_valueininr', models.IntegerField(default='')),
                ('cg_noofpieces', models.IntegerField(default='')),
                ('cg_weight', models.IntegerField(default='')),
                ('cg_ebillno', models.CharField(default='', max_length=10)),
                ('cg_dateofissue', models.DateField(blank=True, null=True)),
                ('cg_dateofvalidity', models.DateField(blank=True, null=True)),
                ('cg_height', models.IntegerField(blank=True, default=0, null=True)),
                ('cg_width', models.IntegerField(blank=True, default=0, null=True)),
                ('cg_length', models.IntegerField(blank=True, default=0, null=True)),
                ('cg_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('cg_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('cg_arrival_date', models.DateTimeField(blank=True, null=True)),
                ('cg_unloading_date', models.DateTimeField(blank=True, null=True)),
                ('cg_consignmentnumber', models.ForeignKey(blank=True, db_column='cg_consignmentnumber', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cg_consignmentnumber', to='sms_app.consignmentdetailinfo')),
                ('cg_currency_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.currency_type')),
                ('cg_description', models.ForeignKey(blank=True, db_column='cg_description', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cg_description', to='sms_app.stock_type')),
                ('cg_lastmodifiedby', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.myuser')),
            ],
        ),
        migrations.CreateModel(
            name='commentsInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('comments_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('comments_remarks', models.TextField(blank=True, max_length=300, null=True)),
                ('comments_ref', models.CharField(blank=True, max_length=50, null=True)),
                ('comments_updated_by', models.ForeignKey(db_column='comments_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='BusinessrevenueInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('br_from_date', models.DateField()),
                ('br_to_date', models.DateField()),
                ('br_revenue_1', models.IntegerField(blank=True, null=True)),
                ('br_remarks', models.TextField(blank=True, default='', max_length=500, null=True)),
                ('br_updated_on', models.DateTimeField(auto_now=True, null=True)),
                ('br_business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.business_sol_info')),
                ('br_customer_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerinfo')),
                ('br_sale_person', models.ForeignKey(db_column='br_sale_person', on_delete=django.db.models.deletion.CASCADE, related_name='br_sale_person', to='sms_app.myuser')),
                ('br_updated_by', models.ForeignKey(db_column='br_updated_by', on_delete=django.db.models.deletion.CASCADE, related_name='br_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['br_revenue_1'],
            },
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='asset_assignedto',
            field=models.ForeignKey(blank=True, db_column='asset_assignedto', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_assignedto', to='sms_app.myuser'),
        ),
        migrations.AddField(
            model_name='assetinfo',
            name='asset_updated_by',
            field=models.ForeignKey(db_column='asset_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asset_updated_by', to='sms_app.myuser'),
        ),
        migrations.CreateModel(
            name='Ar_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ar_operation_date', models.DateField(blank=True, null=True)),
                ('ar_invoice_date', models.DateField(blank=True, null=True)),
                ('ar_service_value', models.FloatField(blank=True, default=0.0, null=True)),
                ('ar_cgst', models.FloatField(blank=True, default=0.0, null=True)),
                ('ar_sgst', models.FloatField(blank=True, default=0.0, null=True)),
                ('ar_igst', models.FloatField(blank=True, default=0.0, null=True)),
                ('ar_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('ar_submission_date', models.DateField(blank=True, null=True)),
                ('ar_invoice_sent_to', models.CharField(blank=True, max_length=30, null=True)),
                ('ar_due_from_operation_date', models.IntegerField(blank=True, default=0.0, null=True)),
                ('ar_due_from_invoice_date', models.IntegerField(blank=True, default=0.0, null=True)),
                ('ar_due_from_submission_date', models.IntegerField(blank=True, default=0.0, null=True)),
                ('ar_payment_received_date', models.DateField(blank=True, null=True)),
                ('ar_payment_received_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('ar_total_payment_received_amount', models.FloatField(blank=True, default=0.0, null=True)),
                ('ar_balance_payment', models.FloatField(blank=True, default=0.0, null=True)),
                ('ar_tds', models.FloatField(blank=True, default=0.0, null=True)),
                ('ar_rec_from_operation_date', models.IntegerField(blank=True, default=0.0, null=True)),
                ('ar_rec_from_invoice_date', models.IntegerField(blank=True, default=0.0, null=True)),
                ('ar_rec_from_submission_date', models.IntegerField(blank=True, default=0.0, null=True)),
                ('ar_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('ar_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('ar_invoice_num', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.bilinginfo')),
                ('ar_company', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.business_sol_info')),
                ('ar_product', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.bvmproduct')),
                ('ar_customer_dept', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerdepartmentinfo')),
                ('ar_customer_name', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.customerinfo')),
                ('ar_branch', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='sms_app.location_info')),
                ('ar_status', models.ForeignKey(blank=True, default=6, null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.statuslist')),
                ('ar_unit', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='sms_app.unitinfo')),
                ('ar_sales_person', models.ForeignKey(db_column='ar_sales_person', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ar_sales_person', to='sms_app.myuser')),
                ('ar_updated_by', models.ForeignKey(db_column='ar_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ar_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['ar_company'],
            },
        ),
        migrations.CreateModel(
            name='Ar_comments_Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arc_invoice_num', models.CharField(blank=True, max_length=30, null=True)),
                ('arc_comments', models.TextField(max_length=500)),
                ('arc_created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('arc_updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('arc_customer_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('arc_customer_contact_designation', models.CharField(blank=True, max_length=100, null=True)),
                ('arc_customer', models.ForeignKey(db_column='arc_customer', on_delete=django.db.models.deletion.CASCADE, related_name='arc_customer', to='sms_app.customerinfo')),
                ('arc_updated_by', models.ForeignKey(db_column='arc_updated_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='arc_updated_by', to='sms_app.myuser')),
            ],
            options={
                'ordering': ['arc_invoice_num'],
            },
        ),
    ]
